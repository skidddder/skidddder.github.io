<?xml version="1.0"?>
<!DOCTYPE modification SYSTEM "http://www.elkarte.net/site/modification">
<modification xmlns="http://www.elkarte.net/site/modification" xmlns:elk="http://www.elkarte.net/">

	<id>Elkarte Contributors:ElkArte_115_patch</id>
	<version>1.0</version>
	<file name="BOARDDIR/bootstrap.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		define('ELKBOOT', '1');

		// The software version
		define('FORUM_VERSION', 'ElkArte 1.1.4');

		// Shortcut for the browser cache stale
		define('CACHE_STALE', '?R114');
	}]]></search>
			<add><![CDATA[
		define('ELKBOOT', '1');

		// The software version
		define('FORUM_VERSION', 'ElkArte 1.1.5');

		// Shortcut for the browser cache stale
		define('CACHE_STALE', '?R115');
	}]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/Load.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					if (false === $agreement->checkAccepted($id_member, $modSettings['agreementRevision']))
					{
						setOldUrl('agreement_url_redirect');
						redirectexit('action=register;sa=agreement', true);
					}
				}
			}]]></search>
			<add><![CDATA[					if (false === $agreement->checkAccepted($id_member, $modSettings['agreementRevision']))
					{
						setOldUrl('agreement_url_redirect');
						redirectexit('action=register;sa=agreement');
					}
				}
			}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					if (false === $privacypol->checkAccepted($id_member, $modSettings['privacypolicyRevision']))
					{
						setOldUrl('agreement_url_redirect');
						redirectexit('action=register;sa=privacypol', true);
					}
				}
			}]]></search>
			<add><![CDATA[					if (false === $privacypol->checkAccepted($id_member, $modSettings['privacypolicyRevision']))
					{
						setOldUrl('agreement_url_redirect');
						redirectexit('action=register;sa=privacypol');
					}
				}
			}]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Attachment.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					$attachment[5] = 0;

					// return mime type ala mimetype extension
					$finfo = finfo_open(FILEINFO_MIME_TYPE);
					$check = returnMimeThumb($full_attach[3]);

					if ($check !== false)]]></search>
			<add><![CDATA[					$attachment[5] = 0;

					// return mime type ala mimetype extension
					$check = returnMimeThumb($full_attach[3]);

					if ($check !== false)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						$filename = $attachmentUploadDir[$modSettings['currentAttachmentUploadDir']] . '/' . $attachment[1];
					}

					if (file_exists($filename) && substr(finfo_file($finfo, $filename), 0, 5) !== 'image')
					{
						$attachment[3] = 'png';
						$attachment[6] = 'image/png';
						$filename = $settings['theme_dir'] . '/images/mime_images/default.png';
					}

					finfo_close($finfo);
				}
			}
		}]]></search>
			<add><![CDATA[						$filename = $attachmentUploadDir[$modSettings['currentAttachmentUploadDir']] . '/' . $attachment[1];
					}

					if (substr(get_finfo_mime($filename), 0, 5) !== 'image')
					{
						$attachment[3] = 'png';
						$attachment[6] = 'image/png';
						$filename = $settings['theme_dir'] . '/images/mime_images/default.png';
					}

				}
			}
		}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$resize = true;

		// Return mime type ala mimetype extension
		$finfo = finfo_open(FILEINFO_MIME_TYPE);

		if (substr(finfo_file($finfo, $filename), 0, 5) !== 'image')
		{
			$checkMime = returnMimeThumb($file_ext);
			$mime_type = 'image/png';
			$resize = false;
			$filename = $checkMime;
		}
		finfo_close($finfo);

		$eTag = '"' . substr($id_attach . $real_filename . filemtime($filename), 0, 64) . '"';
		$use_compression = !empty($modSettings['enableCompressedOutput']) && @filesize($filename) <= 4194304 && in_array($file_ext, array('txt', 'html', 'htm', 'js', 'doc', 'docx', 'rtf', 'css', 'php', 'log', 'xml', 'sql', 'c', 'java'));]]></search>
			<add><![CDATA[		$resize = true;

		// Return mime type ala mimetype extension
		if (substr(get_finfo_mime($filename), 0, 5) !== 'image')
		{
			$checkMime = returnMimeThumb($file_ext);
			$mime_type = 'image/png';
			$resize = false;
			$filename = $checkMime;
		}

		$eTag = '"' . substr($id_attach . $real_filename . filemtime($filename), 0, 64) . '"';
		$use_compression = !empty($modSettings['enableCompressedOutput']) && @filesize($filename) <= 4194304 && in_array($file_ext, array('txt', 'html', 'htm', 'js', 'doc', 'docx', 'rtf', 'css', 'php', 'log', 'xml', 'sql', 'c', 'java'));]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Attachments.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	return '';
}]]></search>
			<add><![CDATA[
	return '';
}

/**
 * This function returns the mimeType of a file using the best means available
 *
 * @param string $filename
 * @return bool|mixed|string
 */
function get_finfo_mime($filename)
{
	$mimeType = false;

	// Check only existing readable files
	if (!file_exists($filename) || !is_readable($filename))
	{
		return $mimeType;
	}

	// Try finfo, this is the preferred way
	if (function_exists('finfo_open'))
	{
		$finfo = finfo_open(FILEINFO_MIME);
		$mimeType = finfo_file($finfo, $filename);
		finfo_close($finfo);
	}
	// No finfo? What? lets try the old mime_content_type
	elseif (function_exists('mime_content_type'))
	{
		$mimeType = mime_content_type($filename);
	}
	// Try using an exec call
	elseif (function_exists('exec'))
	{
		$mimeType = @exec("/usr/bin/file -i -b $filename");
	}

	// Still nothing? We should at least be able to get images correct
	if (empty($mimeType))
	{
		$imageData = elk_getimagesize($filename, 'none');
		if (!empty($imageData['mime']))
		{
			$mimeType = $imageData['mime'];
		}
	}

	// Account for long responses like text/plain; charset=us-ascii
	if (!empty($mimeType) && strpos($mimeType, ';'))
	{
		list($mimeType,) = explode(';', $mimeType);
	}

	return $mimeType;
}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/DataValidator.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$tokens = @token_get_all($input[$field]);
		foreach ($tokens as $token)
		{
			if ($token === '{')
				$level++;
			elseif ($token === '}')
				$level--;]]></search>
			<add><![CDATA[		$tokens = @token_get_all($input[$field]);
		foreach ($tokens as $token)
		{
			if ($token === '{' || (isset($token[1]) && $token[1] === '${'))
				$level++;
			elseif ($token === '}')
				$level--;]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Ila.integrate.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.4
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[\BBC\Codes::ATTR_CONTENT => '<a id="link_$1" data-lightboximage="$1" data-lightboxmessage="0" href="' . $scripturl . '?action=dlattach;attach=$1;image"><img src="' . $scripturl . '?action=dlattach;attach=$1{type}" alt="asd" class="bbc_img {align}" /></a>',]]></search>
			<add><![CDATA[\BBC\Codes::ATTR_CONTENT => '<a id="link_$1" data-lightboximage="$1" data-lightboxmessage="0" href="' . $scripturl . '?action=dlattach;attach=$1;image"><img src="' . $scripturl . '?action=dlattach;attach=$1{type}" alt="X" class="bbc_img {align}" /></a>',]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/HttpReq.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// To the validator
		$this->_dataValidator->validation_rules(array());
		$this->_dataValidator->sanitation_rules(array($name => $sanitize));
		$this->_dataValidator->validate($this->_param);

		// Return the clean value]]></search>
			<add><![CDATA[		// To the validator
		$this->_dataValidator->validation_rules(array());
		$this->_dataValidator->sanitation_rules(array($name => $sanitize));

		if (is_array($this->_param[$name]))
		{
			$this->_dataValidator->input_processing(array($name => 'array'));
		}

		$this->_dataValidator->validate($this->_param);

		// Return the clean value]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Display.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function template_display_attachments($message, $ignoring)
{
	global $context, $txt, $scripturl;

	echo '
							<footer id="msg_', $message['id'], '_footer" class="attachments', $ignoring ? ' hide"' : '"', '>';]]></search>
			<add><![CDATA[ */
function template_display_attachments($message, $ignoring)
{
	global $context, $txt, $scripturl, $modSettings;

	echo '
							<footer id="msg_', $message['id'], '_footer" class="attachments', $ignoring ? ' hide"' : '"', '>';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				echo '
											<img class="attachment_image" src="', $attachment['href'], ';image" alt="" style="max-width:100%; max-height:' . $attachment['height'] . 'px;"/>';
		}

		echo '
											<a href="', $attachment['href'], '" class="attachment_name">]]></search>
			<add><![CDATA[				echo '
											<img class="attachment_image" src="', $attachment['href'], ';image" alt="" style="max-width:100%; max-height:' . $attachment['height'] . 'px;"/>';
		}
		elseif (!empty($modSettings['attachmentShowImages']))
			echo '							<img class="attachment_image" src="', $attachment['href'], ';thumb" alt="" style="max-width:' . $modSettings['attachmentThumbWidth'] . 'px; max-height:' . $modSettings['attachmentThumbHeight'] . 'px;" />';

		echo '
											<a href="', $attachment['href'], '" class="attachment_name">]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/ManageSmileys.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.5
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		foreach ($location['rows'] as $key => $row)
		{
			if (!empty($context['move_smiley']))
				echo '
				<a href="', $scripturl, '?action=admin;area=smileys;sa=setorder;location=', $location['id'], ';source=', $context['move_smiley'], ';row=', $row[0]['row'], ';reorder=1;', $context['session_var'], '=', $context['session_id'], '"><img src="', $settings['images_url'], '/smiley_select_spot.png" alt="', $txt['smileys_move_here'], '" /></a>';

			echo '
				<ul id="smiley_' . $location['id'] . '|' . $key . '" class="sortable_smiley">';

			foreach ($row as $smiley)
			{
				if (empty($context['move_smiley']))]]></search>
			<add><![CDATA[
		foreach ($location['rows'] as $key => $row)
		{
			echo '
				<ul id="smiley_' . $location['id'] . '|' . $key . '" class="sortable_smiley">';

			if (!empty($context['move_smiley']))
			{
				echo '
					<li>
						<a href="', $scripturl, '?action=admin;area=smileys;sa=setorder;location=', $location['id'], ';source=', $context['move_smiley'], ';row=', $row[0]['row'], ';reorder=1;', $context['session_var'], '=', $context['session_id'], '">
							<img src="', $settings['images_url'], '/smiley_select_spot.png" alt="', $txt['smileys_move_here'], '" />
						</a>
					</li>';
			}

			foreach ($row as $smiley)
			{
				if (empty($context['move_smiley']))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	}

	echo '
	</div>
	<script>
		$().elkSortable({
			sa: "smileyorder",]]></search>
			<add><![CDATA[	}

	echo '
	</div>';

	if (empty($context['move_smiley']))
		echo '
	<script>
		$().elkSortable({
			sa: "smileyorder",]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/_besocial/admin_besocial.css">
		<operation>
			<search position="replace"><![CDATA[#quick_tasks li {
	border-bottom: 1px solid transparent;
	border-top: 1px solid transparent;
}]]></search>
			<add><![CDATA[#quick_tasks li {
	border-bottom: 1px solid transparent;
	border-top: 1px solid transparent;
}

.sortable_smiley {
	border-bottom-color: #CCCCCC;
}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/_besocial/index_besocial.css">
		<operation>
			<search position="replace"><![CDATA[		border-color: transparent;
	}

	.statistics .flow_hidden, .statistics .floatleft {
		border: none;
	}]]></search>
			<add><![CDATA[		border-color: transparent;
	}

	#main_menu .linklevel1.active .icon-menu {
		border-color: #43A8DA;
	}

	#main_menu .linklevel1 .icon-menu:hover {
		background: #F4F4F4;
	}

	.statistics .flow_hidden, .statistics .floatleft {
		border: none;
	}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/_light/admin_light.css">
		<operation>
			<search position="replace"><![CDATA[	background-color: #EEEEEE !important;
	border-color: green !important;
}]]></search>
			<add><![CDATA[	background-color: #EEEEEE !important;
	border-color: green !important;
}

.sortable_smiley {
	border-bottom-color: #CCCCCC;
}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/_light/index_light.css">
		<operation>
			<search position="replace"><![CDATA[		background: transparent;
	}

	#main_menu .linklevel1.active, #main_menu .linklevel1.active:hover {
		border: none;]]></search>
			<add><![CDATA[		background: transparent;
	}

	#main_menu .linklevel1.active .icon-menu {
		border-color: #5BA048;
	}

	#main_menu .linklevel1 .icon-menu:hover {
		background: #F4F4F4;]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/admin.css">
		<operation>
			<search position="replace"><![CDATA[	padding: 0 6px;
}

.pagelink, .current_page, .expand_pages {
	border: 0;
	background-color: transparent;]]></search>
			<add><![CDATA[	padding: 0 6px;
}

.sortable_smiley {
	border-bottom: 1px solid;
	margin-top: 3px;
}

.pagelink, .current_page, .expand_pages {
	border: 0;
	background-color: transparent;]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/index.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['error_invalid_characters_username'] = 'Invalid character used in user name.';

$txt['welcome_guest'] = 'Welcome, <strong>Guest</strong>. Please <a href="{login_url}" rel="nofollow">login</a>.';
$txt['welcome_guest_register'] = 'Welcome to <strong>{forum_name}</strong>. Please <a href="{login_url}" rel="nofollow">login</a> or <a href="{register_url} rel="nofollow"">register</a>.';
$txt['welcome_guest_activate'] = '<br />Did you miss your <a href="{activate_url}" rel="nofollow">activation email</a>?';

// @todo the following to sprintf]]></search>
			<add><![CDATA[$txt['error_invalid_characters_username'] = 'Invalid character used in user name.';

$txt['welcome_guest'] = 'Welcome, <strong>Guest</strong>. Please <a href="{login_url}" rel="nofollow">login</a>.';
$txt['welcome_guest_register'] = 'Welcome to <strong>{forum_name}</strong>. Please <a href="{login_url}" rel="nofollow">login</a> or <a href="{register_url}" rel="nofollow">register</a>.';
$txt['welcome_guest_activate'] = '<br />Did you miss your <a href="{activate_url}" rel="nofollow">activation email</a>?';

// @todo the following to sprintf]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/topic.js">
		<operation>
			<search position="replace"><![CDATA[		// Append it to the container
		var oCheckboxContainer = document.getElementById(this.opt.sCheckboxContainerMask + this.opt.aMessageIds[i]);
		oCheckboxContainer.appendChild(oCheckbox);
		oCheckboxContainer.style.display = '';
	}
};]]></search>
			<add><![CDATA[		// Append it to the container
		var oCheckboxContainer = document.getElementById(this.opt.sCheckboxContainerMask + this.opt.aMessageIds[i]);
		oCheckboxContainer.appendChild(oCheckbox);
		oCheckboxContainer.style.display = 'inline';
	}
};]]></add>
		</operation>
	</file>
</modification>
