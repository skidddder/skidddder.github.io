<?xml version="1.0"?>
<!DOCTYPE modification SYSTEM "http://www.elkarte.net/site/modification">
<modification xmlns="http://www.elkarte.net/site/modification" xmlns:elk="http://www.elkarte.net/">

	<id>Elkarte Contributors:ElkArte_114_patch</id>
	<version>1.1.4</version>
	<file name="BOARDDIR/SSI.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:    2011 Simple Machines (http://www.simplemachines.org)
 * license:        BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:    2011 Simple Machines (http://www.simplemachines.org)
 * license:        BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	define('ELK', 'SSI');

	require_once(dirname(__FILE__) . '/bootstrap.php');
	$bootstrap = new Bootstrap();
}

// The globals that were created during the bootstrap process]]></search>
			<add><![CDATA[	define('ELK', 'SSI');

	require_once(dirname(__FILE__) . '/bootstrap.php');
	$bootstrap = new Bootstrap(true);
}

// The globals that were created during the bootstrap process]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	echo '
		<table class="ssi_table">
			<tr>
				<th class="lefttext">', $txt['board'], '</th>
				<th class="righttext">', $txt['board_topics'], '</th>
				<th class="righttext">', $txt['posts'], '</th>
			</tr>';

	foreach ($boards as $board)]]></search>
			<add><![CDATA[	echo '
		<table class="ssi_table">
			<tr>
				<th>', $txt['board'], '</th>
				<th class="centertext">', $txt['board_topics'], '</th>
				<th class="centertext">', $txt['posts'], '</th>
			</tr>';

	foreach ($boards as $board)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		echo '
			<tr>
				<td>', $board['new'] ? ' <a href="' . $board['href'] . '"><span class="new_posts">' . $txt['new'] . '</span></a> ' : '', $board['link'], '</td>
				<td class="righttext">', $board['num_topics'], '</td>
				<td class="righttext">', $board['num_posts'], '</td>
			</tr>';
	}
]]></search>
			<add><![CDATA[		echo '
			<tr>
				<td>', $board['new'] ? ' <a href="' . $board['href'] . '"><span class="new_posts">' . $txt['new'] . '</span></a> ' : '', $board['link'], '</td>
				<td class="centertext">', $board['num_topics'], '</td>
				<td class="centertext">', $board['num_posts'], '</td>
			</tr>';
	}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		<table class="top_topic ssi_table">
			<tr>
				<th class="link"></th>
				<th class="views">', $txt['views'], '</th>
				<th class="num_replies">', $txt['replies'], '</th>
			</tr>';

	foreach ($topics as $topic)]]></search>
			<add><![CDATA[		<table class="top_topic ssi_table">
			<tr>
				<th class="link"></th>
				<th class="centertext views">', $txt['views'], '</th>
				<th class="centertext num_replies">', $txt['replies'], '</th>
			</tr>';

	foreach ($topics as $topic)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				<td class="link">
					', $topic['link'], '
				</td>
				<td class="views">', $topic['num_views'], '</td>
				<td class="num_replies">', $topic['num_replies'], '</td>
			</tr>';
	}
]]></search>
			<add><![CDATA[				<td class="link">
					', $topic['link'], '
				</td>
				<td class="centertext views">', $topic['num_views'], '</td>
				<td class="centertext num_replies">', $topic['num_replies'], '</td>
			</tr>';
	}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			INNER JOIN {db_prefix}topics AS t ON (t.id_poll = p.id_poll' . ($modSettings['postmod_active'] ? ' AND t.approved = {int:is_approved}' : '') . ')
			INNER JOIN {db_prefix}boards AS b ON (b.id_board = t.id_board)' . ($topPollInstead ? '
			INNER JOIN {db_prefix}poll_choices AS pc ON (pc.id_poll = p.id_poll)' : '') . '
			LEFT JOIN {db_prefix}log_polls AS lp ON (lp.id_poll = p.id_poll AND lp.id_member > {int:no_member} AND lp.id_member = {int:current_member})
		WHERE p.voting_locked = {int:voting_opened}
			AND (p.expire_time = {int:no_expiration} OR {int:current_time} < p.expire_time)
			AND ' . ($user_info['is_guest'] ? 'p.guest_vote = {int:guest_vote_allowed}' : 'lp.id_choice IS NULL') . ']]></search>
			<add><![CDATA[			INNER JOIN {db_prefix}topics AS t ON (t.id_poll = p.id_poll' . ($modSettings['postmod_active'] ? ' AND t.approved = {int:is_approved}' : '') . ')
			INNER JOIN {db_prefix}boards AS b ON (b.id_board = t.id_board)' . ($topPollInstead ? '
			INNER JOIN {db_prefix}poll_choices AS pc ON (pc.id_poll = p.id_poll)' : '') . '
			LEFT JOIN {db_prefix}log_polls AS lp ON (lp.id_poll = p.id_poll 
				AND lp.id_member > {int:no_member} 
				AND lp.id_member = {int:current_member})
		WHERE p.voting_locked = {int:voting_opened}
			AND (p.expire_time = {int:no_expiration} OR {int:current_time} < p.expire_time)
			AND ' . ($user_info['is_guest'] ? 'p.guest_vote = {int:guest_vote_allowed}' : 'lp.id_choice IS NULL') . ']]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$db->free_result($request);

	// This user has voted on all the polls.
	if ($row === false)
	{
		return array();
	}]]></search>
			<add><![CDATA[	$db->free_result($request);

	// This user has voted on all the polls.
	if (empty($row))
	{
		return array();
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// Give them the default.
	echo '
		<table class="ssi_downloads" cellpadding="2">
			<tr>
				<th align="left">', $txt['file'], '</th>
				<th align="left">', $txt['posted_by'], '</th>
				<th align="left">', $txt['downloads'], '</th>
				<th align="left">', $txt['filesize'], '</th>
			</tr>';

	foreach ($attachments as $attach)]]></search>
			<add><![CDATA[
	// Give them the default.
	echo '
		<table class="ssi_table">
			<tr>
				<th>', $txt['file'], '</th>
				<th>', $txt['posted_by'], '</th>
				<th class="centertext">', $txt['downloads'], '</th>
				<th>', $txt['filesize'], '</th>
			</tr>';

	foreach ($attachments as $attach)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			<tr>
				<td>', $attach['file']['link'], '</td>
				<td>', $attach['member']['link'], '</td>
				<td align="center">', $attach['file']['downloads'], '</td>
				<td>', $attach['file']['filesize'], '</td>
			</tr>';
	}]]></search>
			<add><![CDATA[			<tr>
				<td>', $attach['file']['link'], '</td>
				<td>', $attach['member']['link'], '</td>
				<td class="centertext">', $attach['file']['downloads'], '</td>
				<td>', $attach['file']['filesize'], '</td>
			</tr>';
	}]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/BrowserDetector.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		global $context;

		if ($this->_is_mobile && !$this->_is_tablet)
			$context['browser_body_id'] = 'mobile';
		elseif ($this->_is_tablet)
			$context['browser_body_id'] = 'tablet';
		else
		{
			// Add in any specific detection conversions here if you want a special body id e.g. 'is_opera9' => 'opera9']]></search>
			<add><![CDATA[		global $context;

		if ($this->_is_mobile && !$this->_is_tablet)
		{
			$context['browser_body_id'] = 'mobile';
			$this->_browsers['is_mobile'] = true;
		}
		elseif ($this->_is_tablet)
		{
			$context['browser_body_id'] = 'tablet';
			$this->_browsers['is_tablet'] = true;
		}
		else
		{
			// Add in any specific detection conversions here if you want a special body id e.g. 'is_opera9' => 'opera9']]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/Load.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	else
		$user_info['query_wanna_see_board'] = '(' . $user_info['query_see_board'] . ' AND b.id_board NOT IN (' . implode(',', $user_info['ignoreboards']) . '))';

	call_integration_hook('integrate_user_info');
}
]]></search>
			<add><![CDATA[	else
		$user_info['query_wanna_see_board'] = '(' . $user_info['query_see_board'] . ' AND b.id_board NOT IN (' . implode(',', $user_info['ignoreboards']) . '))';

	if ($user_info['is_guest'] === false)
	{
		$http_request = HttpReq::instance();
		if (!empty($modSettings['force_accept_agreement']))
		{
			if (!empty($modSettings['agreementRevision']) && !empty($modSettings['requireAgreement']) && in_array($http_request->action, array('reminder', 'register')) === false)
			{
				if ($http_request->action !== 'profile' || $http_request->area !== 'deleteaccount')
				{
					$agreement = new \Agreement($user_info['language']);
					if (false === $agreement->checkAccepted($id_member, $modSettings['agreementRevision']))
					{
						setOldUrl('agreement_url_redirect');
						redirectexit('action=register;sa=agreement', true);
					}
				}
			}
		}
		if (!empty($modSettings['force_accept_privacy_policy']))
		{
			if (!empty($modSettings['privacypolicyRevision']) && !empty($modSettings['requirePrivacypolicy']) && in_array($http_request->action, array('reminder', 'register')) === false)
			{
				if ($http_request->action !== 'profile' || $http_request->area !== 'deleteaccount')
				{
					$privacypol = new \PrivacyPolicy($user_info['language']);
					if (false === $privacypol->checkAccepted($id_member, $modSettings['privacypolicyRevision']))
					{
						setOldUrl('agreement_url_redirect');
						redirectexit('action=register;sa=privacypol', true);
					}
				}
			}
		}
	}
	call_integration_hook('integrate_user_info');
}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if (!empty($new_loaded_ids) && !empty($user_info['id']) && $set !== 'minimal' && (in_array('cp', $context['admin_features'])))
	{
		$request = $db->query('', '
			SELECT id_member, variable, value
			FROM {db_prefix}custom_fields_data
			WHERE id_member' . (count($new_loaded_ids) == 1 ? ' = {int:loaded_ids}' : ' IN ({array_int:loaded_ids})'),
			array(
				'loaded_ids' => count($new_loaded_ids) == 1 ? $new_loaded_ids[0] : $new_loaded_ids,
			)
		);
		while ($row = $db->fetch_assoc($request))
			$user_profile[$row['id_member']]['options'][$row['variable']] = $row['value'];
		$db->free_result($request);
	}
]]></search>
			<add><![CDATA[	if (!empty($new_loaded_ids) && !empty($user_info['id']) && $set !== 'minimal' && (in_array('cp', $context['admin_features'])))
	{
		$request = $db->query('', '
			SELECT cfd.id_member, cfd.variable, cfd.value, cf.field_options, cf.field_type
			FROM {db_prefix}custom_fields_data AS cfd
			JOIN {db_prefix}custom_fields AS cf ON (cf.col_name = cfd.variable)
			WHERE id_member' . (count($new_loaded_ids) == 1 ? ' = {int:loaded_ids}' : ' IN ({array_int:loaded_ids})'),
			array(
				'loaded_ids' => count($new_loaded_ids) == 1 ? $new_loaded_ids[0] : $new_loaded_ids,
			)
		);
		while ($row = $db->fetch_assoc($request))
		{
			if (!empty($row['field_options']))
			{
				$field_options = explode(',', $row['field_options']);
				$key = (int) array_search($row['value'], $field_options);
			}
			else
			{
				$key = 0;
			}

			$user_profile[$row['id_member']]['options'][$row['variable'] . '_key'] = $row['variable'] . '_' . $key;
			$user_profile[$row['id_member']]['options'][$row['variable']] = $row['value'];
		}
		$db->free_result($request);
	}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
			// Enclosing the user input within some other text?
			if (!empty($custom['enclose']))
				$value = strtr($custom['enclose'], array(
					'{SCRIPTURL}' => $scripturl,
					'{IMAGES_URL}' => $settings['images_url'],
					'{DEFAULT_IMAGES_URL}' => $settings['default_images_url'],
					'{INPUT}' => $value,
				));

			$memberContext[$user]['custom_fields'][] = array(
				'title' => $custom['title'],]]></search>
			<add><![CDATA[
			// Enclosing the user input within some other text?
			if (!empty($custom['enclose']))
			{
				$replacements = array(
					'{SCRIPTURL}' => $scripturl,
					'{IMAGES_URL}' => $settings['images_url'],
					'{DEFAULT_IMAGES_URL}' => $settings['default_images_url'],
					'{INPUT}' => $value,
				);

				if (in_array($custom['type'], array('radio', 'select')))
				{
					$replacements['{KEY}'] = $profile['options'][$custom['colname'] . '_key'];
				}
				$value = strtr($custom['enclose'], $replacements);
			}

			$memberContext[$user]['custom_fields'][] = array(
				'title' => $custom['title'],]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'atom' => $scripturl . '?action=.xml;type=atom;limit=' . (!empty($modSettings['xmlnews_limit']) ? $modSettings['xmlnews_limit'] : 5)
		);

	theme()->loadThemeJavascript();

	Hooks::instance()->newPath(array('$themedir' => $settings['theme_dir']));]]></search>
			<add><![CDATA[			'atom' => $scripturl . '?action=.xml;type=atom;limit=' . (!empty($modSettings['xmlnews_limit']) ? $modSettings['xmlnews_limit'] : 5)
		);

	if (!empty($_SESSION['agreement_accepted']))
	{
		$_SESSION['agreement_accepted'] = null;
		$context['accepted_agreement'] = array(
			'errors' => array(
				'accepted_agreement' => $txt['agreement_accepted']
			)
		);
	}

	if (!empty($_SESSION['privacypolicy_accepted']))
	{
		$_SESSION['privacypolicy_accepted'] = null;
		$context['accepted_agreement'] = array(
			'errors' => array(
				'accepted_privacy_policy' => $txt['privacypolicy_accepted']
			)
		);
	}

	theme()->loadThemeJavascript();

	Hooks::instance()->newPath(array('$themedir' => $settings['theme_dir']));]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[{
	global $settings, $modSettings, $mbname, $context;

	$db = database();

	// Get all the default theme variables.]]></search>
			<add><![CDATA[{
	global $settings, $modSettings, $mbname, $context;

	if (function_exists('database') === false)
	{
		throw new \Exception('');
	}

	$db = database();

	// Get all the default theme variables.]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/SiteCombiner.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.1
 */

/**]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.4
 */

/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if (isset($options['dir']))
		{
			$filename = $options['dir'] . $options['basename'];
			$this->_combine_files[$options['basename']] = array(
				'file' => $filename,
				'basename' => $options['basename'],]]></search>
			<add><![CDATA[		if (isset($options['dir']))
		{
			$filename = $options['dir'] . $options['basename'];
			if (file_exists($filename) === false)
			{
				return false;
			}

			$this->_combine_files[$options['basename']] = array(
				'file' => $filename,
				'basename' => $options['basename'],]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/Subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.3
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Need user agent
	$req = request();

	// Remember this URL in case someone doesn't like sending HTTP_REFERER.
	$invalid_old_url = array(
		'action=dlattach',]]></search>
			<add><![CDATA[	// Need user agent
	$req = request();

	setOldUrl();

	// For session check verification.... don't switch browsers...
	$_SESSION['USER_AGENT'] = $req->user_agent();

	// Hand off the output to the portal, etc. we're integrated with.
	call_integration_hook('integrate_exit', array($do_footer));

	// Don't exit if we're coming from index.php; that will pass through normally.
	if (!$from_index)
		exit;
}

function setOldUrl($index = 'old_url')
{
	// Remember this URL in case someone doesn't like sending HTTP_REFERER.
	$invalid_old_url = array(
		'action=dlattach',]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}
	}
	if ($make_old === true)
		$_SESSION['old_url'] = $_SERVER['REQUEST_URL'];

	// For session check verification.... don't switch browsers...
	$_SESSION['USER_AGENT'] = $req->user_agent();

	// Hand off the output to the portal, etc. we're integrated with.
	call_integration_hook('integrate_exit', array($do_footer));

	// Don't exit if we're coming from index.php; that will pass through normally.
	if (!$from_index)
		exit;
}

/**]]></search>
			<add><![CDATA[		}
	}
	if ($make_old === true)
	{
		$_SESSION[$index] = $_SERVER['REQUEST_URL'];
	}
}

/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function dieGif($expired = false)
{
	// The following logging is just for debug, it should be removed before final
	// or at least once the bug is fixes #2391
	$filename = '';
	$linenum = '';
	if (headers_sent($filename, $linenum))
	{
		if (empty($filename))
		{
			ob_clean();
		}
		else
		{
			Errors::instance()->log_error('Headers already sent in ' . $filename . ' at line ' . $linenum);
		}
	}

	if ($expired === true)]]></search>
			<add><![CDATA[ */
function dieGif($expired = false)
{
	// The following is an attempt at stopping the behavior identified in #2391
	if (function_exists('fastcgi_finish_request'))
	{
		die();
	}

	if ($expired === true)]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/Admin.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						'subsections' => array(
							'register' => array($txt['admin_browse_register_new'], 'moderate_forum'),
							'agreement' => array($txt['registration_agreement'], 'admin_forum'),
							'reservednames' => array($txt['admin_reserved_set'], 'admin_forum'),
							'settings' => array($txt['settings'], 'admin_forum'),
						),]]></search>
			<add><![CDATA[						'subsections' => array(
							'register' => array($txt['admin_browse_register_new'], 'moderate_forum'),
							'agreement' => array($txt['registration_agreement'], 'admin_forum'),
							'privacypol' => array($txt['privacy_policy'], 'admin_forum'),
							'reservednames' => array($txt['admin_reserved_set'], 'admin_forum'),
							'settings' => array($txt['settings'], 'admin_forum'),
						),]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageAttachments.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$context['attachmentUploadDir'] = $modSettings['attachmentUploadDir'][$modSettings['currentAttachmentUploadDir']];

		// First time here?
		if (empty($modSettings['attachment_basedirectories']) && $modSettings['currentAttachmentUploadDir'] == 1 && count($modSettings['attachmentUploadDir']) == 1)
			$modSettings['attachmentUploadDir'] = $modSettings['attachmentUploadDir'][1];

		// If not set, show a default path for the base directory]]></search>
			<add><![CDATA[		$context['attachmentUploadDir'] = $modSettings['attachmentUploadDir'][$modSettings['currentAttachmentUploadDir']];

		// First time here?
		if (empty($modSettings['attachment_basedirectories']) && $modSettings['currentAttachmentUploadDir'] == 1 && (is_array($modSettings['attachmentUploadDir']) && count($modSettings['attachmentUploadDir']) == 1))
			$modSettings['attachmentUploadDir'] = $modSettings['attachmentUploadDir'][1];

		// If not set, show a default path for the base directory]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						? $txt['basedirectory_for_attachments_current']
						: $txt['basedirectory_for_attachments_warning']))
				),
				empty($modSettings['attachment_basedirectories']) && $modSettings['currentAttachmentUploadDir'] == 1 && count($modSettings['attachmentUploadDir']) == 1
					? array('text', 'attachmentUploadDir', 'postinput' => $txt['attachmentUploadDir_multiple_configure'], 40, 'invalid' => !$context['valid_upload_dir'])
					: array('var_message', 'attach_current_directory', 'postinput' => $txt['attachmentUploadDir_multiple_configure'], 'message' => 'attachment_path', 'invalid' => empty($context['valid_upload_dir']), 'text_label' => (!empty($context['valid_upload_dir'])
						? $txt['attach_current_dir']]]></search>
			<add><![CDATA[						? $txt['basedirectory_for_attachments_current']
						: $txt['basedirectory_for_attachments_warning']))
				),
				empty($modSettings['attachment_basedirectories']) && $modSettings['currentAttachmentUploadDir'] == 1 && (is_array($modSettings['attachmentUploadDir']) && count($modSettings['attachmentUploadDir']) == 1)
					? array('text', 'attachmentUploadDir', 'postinput' => $txt['attachmentUploadDir_multiple_configure'], 40, 'invalid' => !$context['valid_upload_dir'])
					: array('var_message', 'attach_current_directory', 'postinput' => $txt['attachmentUploadDir_multiple_configure'], 'message' => 'attachment_path', 'invalid' => empty($context['valid_upload_dir']), 'text_label' => (!empty($context['valid_upload_dir'])
						? $txt['attach_current_dir']]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageFeatures.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Load up the profile field, if one was supplied
		if ($context['fid'])
			$context['field'] = getProfileField($context['fid']);

		// Setup the default values as needed.
		if (empty($context['field']))
			$context['field'] = array(
				'name' => '',
				'colname' => '???',]]></search>
			<add><![CDATA[
		// Load up the profile field, if one was supplied
		if ($context['fid'])
		{
			$context['field'] = getProfileField($context['fid']);
		}

		// Setup the default values as needed.
		if (empty($context['field']))
		{
			$context['field'] = array(
				'name' => '',
				'colname' => '???',]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'enclose' => '',
				'placement' => 0,
			);

		// All the javascript for this page... everything else is in admin.js
		addJavascriptVar(array('startOptID' => count($context['field']['options'])));]]></search>
			<add><![CDATA[				'enclose' => '',
				'placement' => 0,
			);
		}

		// All the javascript for this page... everything else is in admin.js
		addJavascriptVar(array('startOptID' => count($context['field']['options'])));]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
							// Is it default?
							if (isset($this->_req->post->default_select) && $this->_req->post->default_select == $k)
								$default = $v;
						}

						if (isset($_POST['default_select']) && $_POST['default_select'] == 'no_default')]]></search>
			<add><![CDATA[
							// Is it default?
							if (isset($this->_req->post->default_select) && $this->_req->post->default_select == $k)
							{
								$default = $v;
							}
						}

						if (isset($_POST['default_select']) && $_POST['default_select'] == 'no_default')]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageLanguages.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			fwrite($fp, $current_data);
			fclose($fp);

			if (function_exists('opcache_invalidate'))
				opcache_invalidate($settings['default_theme_dir'] . '/languages/' . $context['lang_id'] . '/index.' . $context['lang_id'] . '.php');

			$madeSave = true;]]></search>
			<add><![CDATA[			fwrite($fp, $current_data);
			fclose($fp);

			if ($this->_checkOpcache())
				opcache_invalidate($settings['default_theme_dir'] . '/languages/' . $context['lang_id'] . '/index.' . $context['lang_id'] . '.php');

			$madeSave = true;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				fwrite($fp, strtr($file_contents, array("\r" => '')));
				fclose($fp);

				if (function_exists('opcache_invalidate'))
					opcache_invalidate($current_file);

				$madeSave = true;]]></search>
			<add><![CDATA[				fwrite($fp, strtr($file_contents, array("\r" => '')));
				fclose($fp);

				if ($this->_checkOpcache())
					opcache_invalidate($current_file);

				$madeSave = true;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$settingsForm->prepare();
	}

	/**
	 * Load up all of the language settings
	 *]]></search>
			<add><![CDATA[		$settingsForm->prepare();
	}

	/**
	 * Checks if the Zend Opcahce is installed, active and cmd functions available.
	 *
	 * @return bool
	 */
	private function _checkOpcache()
	{
		return (extension_loaded('Zend OPcache') && ini_get('opcache.enable') && stripos(BOARDDIR, ini_get('opcache.restrict_api')) !== 0);
	}

	/**
	 * Load up all of the language settings
	 *]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageRegistration.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'function' => 'action_agreement',
				'permission' => 'admin_forum',
			),
			'reservednames' => array(
				'controller' => $this,
				'function' => 'action_reservednames',]]></search>
			<add><![CDATA[				'function' => 'action_agreement',
				'permission' => 'admin_forum',
			),
			'privacypol' => array(
				'controller' => $this,
				'function' => 'action_privacypol',
				'permission' => 'admin_forum',
			),
			'reservednames' => array(
				'controller' => $this,
				'function' => 'action_reservednames',]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'agreement' => array(
					'description' => $txt['registration_agreement_desc'],
				),
				'reservednames' => array(
					'description' => $txt['admin_reserved_desc'],
				),]]></search>
			<add><![CDATA[				'agreement' => array(
					'description' => $txt['registration_agreement_desc'],
				),
				'privacypol' => array(
					'description' => $txt['privacy_policy_desc'],
				),
				'reservednames' => array(
					'description' => $txt['admin_reserved_desc'],
				),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			}
		}

		$agreement = new \Agreement($context['current_agreement']);

		if (isset($this->_req->post->save) && isset($this->_req->post->agreement))]]></search>
			<add><![CDATA[			}
		}

		$context['warning'] = '';
		$agreement = new \Agreement($context['current_agreement']);

		if (isset($this->_req->post->save) && isset($this->_req->post->agreement))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			validateToken('admin-rega');

			// Off it goes to the agreement file.
			$agreement->save($this->_req->post->agreement);

			updateSettings(array('requireAgreement' => !empty($this->_req->post->requireAgreement), 'checkboxAgreement' => !empty($this->_req->post->checkboxAgreement)));
		}

		$context['agreement'] = Util::htmlspecialchars($agreement->getPlainText(false));

		$context['warning'] = $agreement->isWritable() ? '' : $txt['agreement_not_writable'];
		$context['require_agreement'] = !empty($modSettings['requireAgreement']);
		$context['checkbox_agreement'] = !empty($modSettings['checkboxAgreement']);

		$context['sub_template'] = 'edit_agreement';
		$context['page_title'] = $txt['registration_agreement'];
		createToken('admin-rega');
	}

	/**
	 * Set the names under which users are not allowed to register.
	 *]]></search>
			<add><![CDATA[			validateToken('admin-rega');

			// Off it goes to the agreement file.
			$success = $agreement->save($this->_req->post->agreement, !empty($this->_req->post->checkboxAcceptAgreement));
			if (!empty($this->_req->post->checkboxAcceptAgreement))
			{
				if ($success === false)
				{
					$context['warning'] .= $txt['agreement_backup_not_writable'] . '<br />';
				}
				else
				{
					updateSettings(array('agreementRevision' => $success));
				}
			}

			updateSettings(array('requireAgreement' => !empty($this->_req->post->requireAgreement), 'checkboxAgreement' => !empty($this->_req->post->checkboxAgreement)));
		}

		$context['agreement'] = Util::htmlspecialchars($agreement->getPlainText(false));

		$context['warning'] .= $agreement->isWritable() ? '' : $txt['agreement_not_writable'];
		$context['require_agreement'] = !empty($modSettings['requireAgreement']);
		$context['checkbox_agreement'] = !empty($modSettings['checkboxAgreement']);

		$context['sub_template'] = 'edit_agreement';
		$context['subaction'] = 'agreement';
		$context['agreement_show_options'] = true;
		$context['page_title'] = $txt['registration_agreement'];
		createToken('admin-rega');
	}

	/**
	 * Allows the administrator to edit the privacy policy, and choose whether
	 * it should be shown or not.
	 *
	 * - It writes and saves the privacy policy to the privacypolicy.txt file.
	 * - Accessed by ?action=admin;area=regcenter;sa=privacypol
	 * - Requires the admin_forum permission.
	 *
	 * @uses Admin template and the edit_agreement sub template.
	 */
	public function action_privacypol()
	{
		// I hereby agree not to be a lazy bum.
		global $txt, $context, $modSettings;

		// By default we look at privacypolicy.txt.
		$context['current_agreement'] = '';

		// Is there more than one to edit?
		$context['editable_agreements'] = array(
			'' => $txt['admin_agreement_default'],
		);

		// Get our languages.
		$languages = getLanguages();

		// Try to figure out if we have more agreements.
		foreach ($languages as $lang)
		{
			if (file_exists(BOARDDIR . '/privacypolicy.' . $lang['filename'] . '.txt'))
			{
				$context['editable_agreements'][$lang['filename']] = $lang['name'];

				// Are we editing this?
				if (isset($this->_req->post->agree_lang) && $this->_req->post->agree_lang === $lang['filename'])
				{
					$context['current_agreement'] = $lang['filename'];
					break;
				}
			}
		}

		$context['warning'] = '';
		$privacypol = new \PrivacyPolicy($context['current_agreement']);

		if (isset($this->_req->post->save) && isset($this->_req->post->agreement))
		{
			checkSession();
			validateToken('admin-rega');

			// Off it goes to the agreement file.
			$success = $privacypol->save($this->_req->post->agreement, !empty($this->_req->post->checkboxAcceptAgreement));
			if (!empty($this->_req->post->checkboxAcceptAgreement))
			{
				if ($success === false)
				{
					$context['warning'] .= $txt['privacypol_backup_not_writable'] . '<br />';
				}
				else
				{
					updateSettings(array('privacypolicyRevision' => $success));
				}
			}

			updateSettings(array('requirePrivacypolicy' => !empty($this->_req->post->requireAgreement)));
		}

		$context['agreement'] = Util::htmlspecialchars($privacypol->getPlainText(false));

		$context['warning'] .= $privacypol->isWritable() ? '' : $txt['privacypol_not_writable'];
		$context['require_agreement'] = !empty($modSettings['requirePrivacypolicy']);

		$context['sub_template'] = 'edit_agreement';
		$context['subaction'] = 'privacypol';
		$context['page_title'] = $txt['privacy_policy'];
		// These overrides are here to be able to reuse the template in a simple way without having to change much.
		$txt['admin_agreement'] = $txt['admin_privacypol'];
		$txt['admin_checkbox_accept_agreement'] = $txt['admin_checkbox_accept_privacypol'];
		$txt['confirm_request_accept_agreement'] = $txt['confirm_request_accept_privacy_policy'];

		createToken('admin-rega');
	}

	/**
	 * Set the names under which users are not allowed to register.
	 *]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			array('select', 'registration_method', array($txt['setting_registration_standard'], $txt['setting_registration_activate'], $txt['setting_registration_approval'], $txt['setting_registration_disabled'])),
			array('check', 'enableOpenID'),
			array('check', 'notify_new_registration'),
			array('check', 'send_welcomeEmail'),
			array('check', 'show_DisplayNameOnRegistration'),
			'',]]></search>
			<add><![CDATA[			array('select', 'registration_method', array($txt['setting_registration_standard'], $txt['setting_registration_activate'], $txt['setting_registration_approval'], $txt['setting_registration_disabled'])),
			array('check', 'enableOpenID'),
			array('check', 'notify_new_registration'),
			array('check', 'force_accept_agreement'),
			array('check', 'force_accept_privacy_policy'),
			array('check', 'send_welcomeEmail'),
			array('check', 'show_DisplayNameOnRegistration'),
			'',]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageSmileys.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					'position' => 'below_table_data',
					'class' => 'submitbutton',
					'value' => '
						<input type="submit" name="delete" value="' . $txt['quickmod_delete_selected'] . '" onclick="return confirm(\'' . $txt['icons_confirm'] . '\');" class="right_submit" />
						<a class="linkbutton" href="' . $scripturl . '?action=admin;area=smileys;sa=editicon">' . $txt['icons_add_new'] . '</a>',
				),
				array(
					'position' => 'after_title',]]></search>
			<add><![CDATA[					'position' => 'below_table_data',
					'class' => 'submitbutton',
					'value' => '
						<a class="linkbutton" href="' . $scripturl . '?action=admin;area=smileys;sa=editicon">' . $txt['icons_add_new'] . '</a>
						<input type="submit" name="delete" value="' . $txt['quickmod_delete_selected'] . '" onclick="return confirm(\'' . $txt['icons_confirm'] . '\');" />',
				),
				array(
					'position' => 'after_title',]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageThemes.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.2
 *
 *
 * @todo Update this for the new package manager?]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 *
 * @todo Update this for the new package manager?]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				fwrite($fp, $entire_file);
				fclose($fp);

				if (function_exists('opcache_invalidate'))
					opcache_invalidate($theme_dir . '/' . $_REQUEST['filename']);

				// We're done here.]]></search>
			<add><![CDATA[				fwrite($fp, $entire_file);
				fclose($fp);

				if ($this->_checkOpcache())
					opcache_invalidate($theme_dir . '/' . $_REQUEST['filename']);

				// We're done here.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}
	}

	/**
	 * Handles user browsing in theme directories.
	 *]]></search>
			<add><![CDATA[		}
	}

	/**
	 * Checks if  Zend Opcache is installed, active and its cmd functions available.
	 *
	 * @return bool
	 */
	private function _checkOpcache()
	{
		return (extension_loaded('Zend OPcache') && ini_get('opcache.enable') && stripos(BOARDDIR, ini_get('opcache.restrict_api')) !== 0);
	}

	/**
	 * Handles user browsing in theme directories.
	 *]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			fwrite($fp, file_get_contents($filename));
			fclose($fp);

			if (function_exists('opcache_invalidate'))
				opcache_invalidate($filename);

			redirectexit('action=admin;area=theme;th=' . $context['theme_id'] . ';' . $context['session_var'] . '=' . $context['session_id'] . ';sa=copy');]]></search>
			<add><![CDATA[			fwrite($fp, file_get_contents($filename));
			fclose($fp);

			if ($this->_checkOpcache())
				opcache_invalidate($filename);

			redirectexit('action=admin;area=theme;th=' . $context['theme_id'] . ';' . $context['session_var'] . '=' . $context['session_id'] . ';sa=copy');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			fwrite($fp, file_get_contents($filename));
			fclose($fp);

			if (function_exists('opcache_invalidate'))
				opcache_invalidate($filename);

			redirectexit('action=admin;area=theme;th=' . $context['theme_id'] . ';' . $context['session_var'] . '=' . $context['session_id'] . ';sa=copy');]]></search>
			<add><![CDATA[			fwrite($fp, file_get_contents($filename));
			fclose($fp);

			if ($this->_checkOpcache())
				opcache_invalidate($filename);

			redirectexit('action=admin;area=theme;th=' . $context['theme_id'] . ';' . $context['session_var'] . '=' . $context['session_id'] . ';sa=copy');]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/PackageServers.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			throw new Elk_Exception('package_cant_download', false);

		if ($context['package']['type'] === 'modification')
			$context['package']['install']['link'] = '<a href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">[ ' . $txt['install_mod'] . ' ]</a>';
		elseif ($context['package']['type'] === 'avatar')
			$context['package']['install']['link'] = '<a href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">[ ' . $txt['use_avatars'] . ' ]</a>';
		elseif ($context['package']['type'] === 'language')
			$context['package']['install']['link'] = '<a href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">[ ' . $txt['add_languages'] . ' ]</a>';
		else
			$context['package']['install']['link'] = '';

		$context['package']['list_files']['link'] = '<a href="' . $scripturl . '?action=admin;area=packages;sa=list;package=' . $context['package']['filename'] . '">[ ' . $txt['list_files'] . ' ]</a>';

		// Free a little bit of memory...
		unset($context['package']['xml']);]]></search>
			<add><![CDATA[			throw new Elk_Exception('package_cant_download', false);

		if ($context['package']['type'] === 'modification')
			$context['package']['install']['link'] = '<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">' . $txt['install_mod'] . '</a>';
		elseif ($context['package']['type'] === 'avatar')
			$context['package']['install']['link'] = '<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">' . $txt['use_avatars'] . '</a>';
		elseif ($context['package']['type'] === 'language')
			$context['package']['install']['link'] = '<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">' . $txt['add_languages'] . '</a>';
		else
			$context['package']['install']['link'] = '';

		$context['package']['list_files']['link'] = '<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=list;package=' . $context['package']['filename'] . '">' . $txt['list_files'] . '</a>';

		// Free a little bit of memory...
		unset($context['package']['xml']);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}

		if ($context['package']['type'] === 'modification')
			$context['package']['install']['link'] = '<a href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">[ ' . $txt['install_mod'] . ' ]</a>';
		elseif ($context['package']['type'] === 'avatar')
			$context['package']['install']['link'] = '<a href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">[ ' . $txt['use_avatars'] . ' ]</a>';
		elseif ($context['package']['type'] === 'language')
			$context['package']['install']['link'] = '<a href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">[ ' . $txt['add_languages'] . ' ]</a>';
		else
			$context['package']['install']['link'] = '';

		$context['package']['list_files']['link'] = '<a href="' . $scripturl . '?action=admin;area=packages;sa=list;package=' . $context['package']['filename'] . '">[ ' . $txt['list_files'] . ' ]</a>';

		unset($context['package']['xml']);
]]></search>
			<add><![CDATA[		}

		if ($context['package']['type'] === 'modification')
			$context['package']['install']['link'] = '<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">' . $txt['install_mod'] . '</a>';
		elseif ($context['package']['type'] === 'avatar')
			$context['package']['install']['link'] = '<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">' . $txt['use_avatars'] . '</a>';
		elseif ($context['package']['type'] === 'language')
			$context['package']['install']['link'] = '<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $context['package']['filename'] . '">' . $txt['add_languages'] . '</a>';
		else
			$context['package']['install']['link'] = '';

		$context['package']['list_files']['link'] = '<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=list;package=' . $context['package']['filename'] . '">' . $txt['list_files'] . '</a>';

		unset($context['package']['xml']);
]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/Packages.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
								if ($package['can_uninstall'])
									$return = '
										<a href="' . $scripturl . '?action=admin;area=packages;sa=uninstall;package=' . $package['filename'] . ';pid=' . $package['installed_id'] . '">[ ' . $txt['uninstall'] . ' ]</a>';
								elseif ($package['can_emulate_uninstall'])
									$return = '
										<a href="' . $scripturl . '?action=admin;area=packages;sa=uninstall;ve=' . $package['can_emulate_uninstall'] . ';package=' . $package['filename'] . ';pid=' . $package['installed_id'] . '">[ ' . $txt['package_emulate_uninstall'] . ' ' . $package['can_emulate_uninstall'] . ' ]</a>';
								elseif ($package['can_upgrade'])
									$return = '
										<a href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $package['filename'] . '">[ ' . $txt['package_upgrade'] . ' ]</a>';
								elseif ($package['can_install'])
									$return = '
										<a href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $package['filename'] . '">[ ' . $txt['install_mod'] . ' ]</a>';
								elseif ($package['can_emulate_install'])
									$return = '
										<a href="' . $scripturl . '?action=admin;area=packages;sa=install;ve=' . $package['can_emulate_install'] . ';package=' . $package['filename'] . '">[ ' . $txt['package_emulate_install'] . ' ' . $package['can_emulate_install'] . ' ]</a>';

								return $return . '
										<a href="' . $scripturl . '?action=admin;area=packages;sa=list;package=' . $package['filename'] . '">[ ' . $txt['list_files'] . ' ]</a>
										<a href="' . $scripturl . '?action=admin;area=packages;sa=remove;package=' . $package['filename'] . ';' . $context['session_var'] . '=' . $context['session_id'] . '"' . ($package['is_installed'] && $package['is_current']
											? ' onclick="return confirm(\'' . $txt['package_delete_bad'] . '\');"'
											: '') . '>[ ' . $txt['package_delete'] . ' ]</a>';
							},
							'class' => 'righttext',
						),]]></search>
			<add><![CDATA[
								if ($package['can_uninstall'])
									$return = '
										<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=uninstall;package=' . $package['filename'] . ';pid=' . $package['installed_id'] . '">' . $txt['uninstall'] . '</a>';
								elseif ($package['can_emulate_uninstall'])
									$return = '
										<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=uninstall;ve=' . $package['can_emulate_uninstall'] . ';package=' . $package['filename'] . ';pid=' . $package['installed_id'] . '">' . $txt['package_emulate_uninstall'] . ' ' . $package['can_emulate_uninstall'] . '</a>';
								elseif ($package['can_upgrade'])
									$return = '
										<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $package['filename'] . '">' . $txt['package_upgrade'] . '</a>';
								elseif ($package['can_install'])
									$return = '
										<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=install;package=' . $package['filename'] . '">' . $txt['install_mod'] . '</a>';
								elseif ($package['can_emulate_install'])
									$return = '
										<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=install;ve=' . $package['can_emulate_install'] . ';package=' . $package['filename'] . '">' . $txt['package_emulate_install'] . ' ' . $package['can_emulate_install'] . '</a>';

								return $return . '
										<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=list;package=' . $package['filename'] . '">' . $txt['list_files'] . '</a>
										<a class="linkbutton" href="' . $scripturl . '?action=admin;area=packages;sa=remove;package=' . $package['filename'] . ';' . $context['session_var'] . '=' . $context['session_id'] . '"' . ($package['is_installed'] && $package['is_current']
											? ' onclick="return confirm(\'' . $txt['package_delete_bad'] . '\');"'
											: '') . '>' . $txt['package_delete'] . '</a>';
							},
							'class' => 'righttext',
						),]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Jslocale.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			// If you have to agree to the agreement, it needs to be fetched from the file.
			$agreement = new \Agreement($lang);
			try
			{
				$context['json_data'] = $agreement->getParsedText();
			}
			catch (\Elk_Exception $e)
			{]]></search>
			<add><![CDATA[		{
			// If you have to agree to the agreement, it needs to be fetched from the file.
			$agreement = new \Agreement($lang);
			if (!empty($modSettings['requirePrivacypolicy']))
			{
				$privacypol = new \PrivacyPolicy($lang);
			}
			$context['json_data'] = array('agreement' => '', 'privacypol' => '');
			try
			{
				$context['json_data']['agreement'] = $agreement->getParsedText();
				if (!empty($modSettings['requirePrivacypolicy']))
				{
					$context['json_data']['privacypol'] = $privacypol->getParsedText();
				}
			}
			catch (\Elk_Exception $e)
			{]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/MessageIndex.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$context['unapproved_posts_message'] = sprintf($txt['there_are_unapproved_topics'], $untopics, $unposts, $scripturl . '?action=moderate;area=postmod;sa=' . ($board_info['unapproved_topics'] ? 'topics' : 'posts') . ';brd=' . $board);
		}

		// We only know these.
		if (isset($this->_req->query->sort) && !in_array($this->_req->query->sort, array('subject', 'starter', 'last_poster', 'replies', 'views', 'likes', 'first_post', 'last_post')))
			$this->_req->query->sort = 'last_post';

		// Make sure the starting place makes sense and construct the page index.
		if (isset($this->_req->query->sort))]]></search>
			<add><![CDATA[			$context['unapproved_posts_message'] = sprintf($txt['there_are_unapproved_topics'], $untopics, $unposts, $scripturl . '?action=moderate;area=postmod;sa=' . ($board_info['unapproved_topics'] ? 'topics' : 'posts') . ';brd=' . $board);
		}

		// And now, what we're here for: topics!
		require_once(SUBSDIR . '/MessageIndex.subs.php');

		// Known sort methods.
		$sort_methods = messageIndexSort();
		$default_sort_method = 'last_post';

		// We only know these.
		if (isset($this->_req->query->sort) && !isset($sort_methods[$this->_req->query->sort]))
		{
			$this->_req->query->sort = $default_sort_method;
		}

		// Make sure the starting place makes sense and construct the page index.
		if (isset($this->_req->query->sort))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			formatViewers($board, 'board');
		}

		// And now, what we're here for: topics!
		require_once(SUBSDIR . '/MessageIndex.subs.php');

		// Known sort methods.
		$sort_methods = messageIndexSort();

		// They didn't pick one, default to by last post descending.
		if (!isset($this->_req->query->sort) || !isset($sort_methods[$this->_req->query->sort]))
		{
			$context['sort_by'] = 'last_post';
			$ascending = isset($this->_req->query->asc);
		}
		// Otherwise sort by user selection and default to ascending.]]></search>
			<add><![CDATA[			formatViewers($board, 'board');
		}

		// They didn't pick one, default to by last post descending.
		if (!isset($this->_req->query->sort) || !isset($sort_methods[$this->_req->query->sort]))
		{
			$context['sort_by'] = $default_sort_method;
			$ascending = isset($this->_req->query->asc);
		}
		// Otherwise sort by user selection and default to ascending.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			foreach ($this->_req->post->topics as $topic)
				$actions[(int) $topic] = $this->_req->post->qaction;
		}

		// Weird... how'd you get here?
		if (empty($actions))]]></search>
			<add><![CDATA[			foreach ($this->_req->post->topics as $topic)
				$actions[(int) $topic] = $this->_req->post->qaction;
		}
		else
		{
			$actions = $this->_req->actions;
		}

		// Weird... how'd you get here?
		if (empty($actions))]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Notify.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
class Notify_Controller extends Action_Controller
{
	/**
	 * Dispatch to the right action.
	 *]]></search>
			<add><![CDATA[ */
class Notify_Controller extends Action_Controller
{
	/**
	 * Pre Dispatch, called before other methods, used to load common needs.
	 */
	public function pre_dispatch()
	{
		// Our topic functions are here
		require_once(SUBSDIR . '/Topic.subs.php');
	}

	/**
	 * Dispatch to the right action.
	 *]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		global $user_info, $topic;

		// Our topic functions are here
		require_once(SUBSDIR . '/Topic.subs.php');

		// Attempt to turn notifications on/off.
		setTopicNotification($user_info['id'], $topic, $this->_req->query->sa === 'on');
	}]]></search>
			<add><![CDATA[	{
		global $user_info, $topic;

		// Attempt to turn notifications on/off.
		setTopicNotification($user_info['id'], $topic, $this->_req->query->sa === 'on');
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		global $user_info, $topic;

		// Our topic functions are here
		require_once(SUBSDIR . '/Topic.subs.php');

		setTopicWatch($user_info['id'], $topic, $this->_req->query->sa === 'on');
	}
}]]></search>
			<add><![CDATA[	{
		global $user_info, $topic;

		setTopicWatch($user_info['id'], $topic, $this->_req->query->sa === 'on');
	}
}]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/PersonalMessage.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Set the action to apply to the pm's defined by pm_actions (yes its that brilliant)
		$pm_action = $this->_req->getPost('pm_action', 'trim', '');
		$pm_action = empty($pm_action) && isset($this->_req->post->del_selected) ? 'delete' : '';

		// Create a list of pm's that we need to work on
		if ($pm_action != '']]></search>
			<add><![CDATA[
		// Set the action to apply to the pm's defined by pm_actions (yes its that brilliant)
		$pm_action = $this->_req->getPost('pm_action', 'trim', '');
		$pm_action = empty($pm_action) && isset($this->_req->post->del_selected) ? 'delete' : $pm_action;

		// Create a list of pm's that we need to work on
		if ($pm_action != '']]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/ProfileOptions.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.3
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				{
					var qrcode = new QRCode("qrcode", {
						text: "otpauth://totp/' . $context['forum_name'] . '?secret=" + secret,
						width: 80,
						height: 80,
						colorDark : "#000000",
						colorLight : "#ffffff",
					});]]></search>
			<add><![CDATA[				{
					var qrcode = new QRCode("qrcode", {
						text: "otpauth://totp/' . $context['forum_name'] . '?secret=" + secret,
						width: 100,
						height: 100,
						colorDark : "#000000",
						colorLight : "#ffffff",
					});]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
					var qrcode = new QRCode("qrcode", {
						text: "otpauth://totp/' . $context['forum_name'] . '?secret=" + text,
						width: 80,
						height: 80,
						colorDark: "#000000",
						colorLight: "#ffffff",
					});]]></search>
			<add><![CDATA[
					var qrcode = new QRCode("qrcode", {
						text: "otpauth://totp/' . $context['forum_name'] . '?secret=" + text,
						width: 100,
						height: 100,
						colorDark: "#000000",
						colorLight: "#ffffff",
					});]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Recent.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.2
 *
 */

/**
 * Recent_Controller Class
 * Retrieve information about recent posts
 */
class Recent_Controller extends Action_Controller
{
	/**
	 * The object that will retrieve the data]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */

use ElkArte\sources\Frontpage_Interface;

/**
 * Recent_Controller Class
 * Retrieve information about recent posts
 */
class Recent_Controller extends Action_Controller implements Frontpage_Interface
{
	/**
	 * The object that will retrieve the data]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	private $_flex_start = false;

	/**
	 * Called before any other action method in this class.
	 *]]></search>
			<add><![CDATA[	 */
	private $_flex_start = false;

	/**
	 * Number of posts per page
	 * @var int
	 */
	private $_num_per_page = 10;

	/**
	 * {@inheritdoc}
	 */
	public static function frontPageHook(&$default_action)
	{
		add_integration_function('integrate_menu_buttons', 'MessageIndex_Controller::addForumButton', '', false);
		add_integration_function('integrate_current_action', 'MessageIndex_Controller::fixCurrentAction', '', false);

		$default_action = array(
			'controller' => 'Recent_Controller',
			'function' => 'action_recent_front'
		);
	}

	/**
	 * {@inheritdoc}
	 */
	public static function frontPageOptions()
	{
		parent::frontPageOptions();

		addInlineJavascript('
			$(\'#front_page\').on(\'change\', function() {
				var $base = $(\'#recent_frontpage\').parent();
				if ($(this).val() == \'Recent_Controller\')
				{
					$base.fadeIn();
					$base.prev().fadeIn();
				}
				else
				{
					$base.fadeOut();
					$base.prev().fadeOut();
				}
			}).change();', true);

		return array(array('int', 'recent_frontpage'));
	}

	/**
	 * Called before any other action method in this class.
	 *]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$this->action_recent();
	}

	/**
	 * Find the ten most recent posts.
	 *]]></search>
			<add><![CDATA[		$this->action_recent();
	}

	/**
	 * Intended entry point for recent controller class.
	 *
	 * @see Action_Controller::action_index()
	 */
	public function action_recent_front()
	{
		global $modSettings;

		if (isset($modSettings['recent_frontpage']))
		{
			$this->_num_per_page = $modSettings['recent_frontpage'];
		}

		// Figure out what action to do, thinking, thinking ...
		$this->action_recent();
	}

	/**
	 * Find the ten most recent posts.
	 *]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$this->_grabber->setEarliestMsg(max(0, $modSettings['maxMsgID'] - $this->_maxMsgID[0] - $this->_start * $this->_maxMsgID[1]));

		// Set up the pageindex
		$context['page_index'] = constructPageIndex($this->_base_url, $this->_start, min(100, $this->_total_posts), 10, !empty($this->_flex_start));

		// Rest of the items for the template
		loadTemplate('Recent');]]></search>
			<add><![CDATA[			$this->_grabber->setEarliestMsg(max(0, $modSettings['maxMsgID'] - $this->_maxMsgID[0] - $this->_start * $this->_maxMsgID[1]));

		// Set up the pageindex
		$context['page_index'] = constructPageIndex($this->_base_url, $this->_start, min(100, $this->_total_posts), $this->_num_per_page, !empty($this->_flex_start));

		// Rest of the items for the template
		loadTemplate('Recent');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		);

		// Nothing here... Or at least, nothing you can see...
		if (!$this->_grabber->findRecentMessages($this->_start, 10))
		{
			$context['posts'] = array();
		}]]></search>
			<add><![CDATA[		);

		// Nothing here... Or at least, nothing you can see...
		if (!$this->_grabber->findRecentMessages($this->_start, $this->_num_per_page))
		{
			$context['posts'] = array();
		}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$this->_grabber->setBoards($board);

		// If this board has a significant number of posts in it...
		if ($this->_total_posts > 80 && $this->_total_posts > $modSettings['totalMessages'] / 10)
			$this->_maxMsgID = array(600, 10);

		$this->_base_url = $scripturl . '?action=recent;board=' . $board . '.%1$d';]]></search>
			<add><![CDATA[		$this->_grabber->setBoards($board);

		// If this board has a significant number of posts in it...
		if ($this->_total_posts > 80 && $this->_total_posts > $modSettings['totalMessages'] / $this->_num_per_page)
			$this->_maxMsgID = array(600, 10);

		$this->_base_url = $scripturl . '?action=recent;board=' . $board . '.%1$d';]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Register.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'verificationcode' => array($this, 'action_verificationcode'),
			'coppa' => array($this, 'action_coppa'),
			'agrelang' => array($this, 'action_agrelang'),
		);

		// Setup the action handler]]></search>
			<add><![CDATA[			'verificationcode' => array($this, 'action_verificationcode'),
			'coppa' => array($this, 'action_coppa'),
			'agrelang' => array($this, 'action_agrelang'),
			'privacypol' => array($this, 'action_privacypol'),
			'agreement' => array($this, 'action_agreement'),
		);

		// Setup the action handler]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if (isset($this->_req->post->show_contact))
			redirectexit('action=register;sa=contact');

		loadLanguage('Login');
		loadTemplate('Register');

		// Do we need them to agree to the registration agreement, first?
		$context['require_agreement'] = !empty($modSettings['requireAgreement']);
		$context['checkbox_agreement'] = !empty($modSettings['checkboxAgreement']);
		$context['registration_passed_agreement'] = !empty($_SESSION['registration_agreed']);
		$context['show_coppa'] = !empty($modSettings['coppaAge']);
		$context['show_contact_button'] = !empty($modSettings['enable_contactform']) && $modSettings['enable_contactform'] === 'registration';
		if (!empty($modSettings['show_DisplayNameOnRegistration']))]]></search>
			<add><![CDATA[		if (isset($this->_req->post->show_contact))
			redirectexit('action=register;sa=contact');

		// If we have language support enabled then they need to be loaded
		if ($this->_load_language_support())
		{
			redirectexit('action=register');
		}

		loadLanguage('Login');
		loadTemplate('Register');

		// Do we need them to agree to the registration agreement, first?
		$context['require_agreement'] = !empty($modSettings['requireAgreement']);
		$context['checkbox_agreement'] = !empty($modSettings['checkboxAgreement']);
		$context['require_privacypol'] = !empty($modSettings['requirePrivacypolicy']);
		$context['registration_passed_agreement'] = !empty($_SESSION['registration_agreed']);
		$context['registration_passed_privacypol'] = !empty($_SESSION['registration_privacypolicy']);
		$context['show_coppa'] = !empty($modSettings['coppaAge']);
		$context['show_contact_button'] = !empty($modSettings['enable_contactform']) && $modSettings['enable_contactform'] === 'registration';
		if (!empty($modSettings['show_DisplayNameOnRegistration']))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if ($current_step == 1 && (isset($this->_req->post->accept_agreement) || isset($this->_req->post->accept_agreement_coppa)))
		{
			$context['registration_passed_agreement'] = $_SESSION['registration_agreed'] = true;
			$current_step = 2;

			// Skip the coppa procedure if the user says he's old enough.]]></search>
			<add><![CDATA[		if ($current_step == 1 && (isset($this->_req->post->accept_agreement) || isset($this->_req->post->accept_agreement_coppa)))
		{
			$context['registration_passed_agreement'] = $_SESSION['registration_agreed'] = true;
			$context['registration_passed_privacypol'] = $_SESSION['registration_privacypolicy'] = true;
			$current_step = 2;

			// Skip the coppa procedure if the user says he's old enough.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			throw new Elk_Exception('registration_disabled', false);
		}

		// If we have language support enabled then they need to be loaded
		$this->_load_language_support();
]]></search>
			<add><![CDATA[			throw new Elk_Exception('registration_disabled', false);
		}

		if (!empty($context['require_privacypol']))
		{
			$privacypol = new \PrivacyPolicy($user_info['language']);
			$context['privacy_policy'] = $privacypol->getParsedText();

			if (empty($context['privacy_policy']))
			{
				// No file found or a blank file, log the error so the admin knows there is a problem!
				loadLanguage('Errors');
				Errors::instance()->log_error($txt['registration_privacy_policy_missing'], 'critical');
				throw new Elk_Exception('registration_disabled', false);
			}
		}

		// If we have language support enabled then they need to be loaded
		$this->_load_language_support();
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if (!empty($modSettings['requireAgreement']) && empty($_SESSION['registration_agreed']))
			redirectexit();

		// Make sure they came from *somewhere*, have a session.
		if (!isset($_SESSION['old_url']))
			redirectexit('action=register');]]></search>
			<add><![CDATA[		if (!empty($modSettings['requireAgreement']) && empty($_SESSION['registration_agreed']))
			redirectexit();

		if (!empty($modSettings['requireAgreement']) && !empty($modSettings['requirePrivacypolicy']) && !empty($this->_req->post->checkbox_privacypol))
			$_SESSION['registration_privacypolicy'] = true;

		// Well, if you don't agree, you can't register.
		if (!empty($modSettings['requireAgreement']) && !empty($modSettings['requirePrivacypolicy']) && empty($_SESSION['registration_privacypolicy']))
			redirectexit();

		// Make sure they came from *somewhere*, have a session.
		if (!isset($_SESSION['old_url']))
			redirectexit('action=register');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$regOptions['ip2'] = $req->ban_ip();
		$memberID = registerMember($regOptions, 'register');

		// If there are "important" errors and you are not an admin: log the first error
		// Otherwise grab all of them and don't log anything
		if ($reg_errors->hasErrors(1) && !$user_info['is_admin'])]]></search>
			<add><![CDATA[		$regOptions['ip2'] = $req->ban_ip();
		$memberID = registerMember($regOptions, 'register');

		$lang = !empty($modSettings['userLanguage']) ? $modSettings['userLanguage'] : 'english';
		$agreement = new Agreement($lang);
		$agreement->accept($memberID, $user_info['ip'], empty($modSettings['agreementRevision']) ? strftime('%Y-%m-%d', forum_time(false)) : $modSettings['agreementRevision']);

		if (!empty($modSettings['requirePrivacypolicy']))
		{
			$policy = new \PrivacyPolicy($lang);
			$policy->accept($memberID, $user_info['ip'], empty($modSettings['privacypolicyRevision']) ? strftime('%Y-%m-%d', forum_time(false)) : $modSettings['privacypolicyRevision']);
		}

		// If there are "important" errors and you are not an admin: log the first error
		// Otherwise grab all of them and don't log anything
		if ($reg_errors->hasErrors(1) && !$user_info['is_admin'])]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 * - If language support is enabled, loads whats available
	 * - Verifies the users choice is available
	 * - Sets in in context / session
	 */
	private function _load_language_support()
	{
		global $context, $modSettings, $language;

		// Language support enabled
		if (!empty($modSettings['userLanguage']))]]></search>
			<add><![CDATA[	 * - If language support is enabled, loads whats available
	 * - Verifies the users choice is available
	 * - Sets in in context / session
	 * @return bool true if the language was changed, false if not.
	 */
	private function _load_language_support()
	{
		global $context, $modSettings, $language, $user_info;

		// Language support enabled
		if (!empty($modSettings['userLanguage']))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			if (isset($this->_req->post->lngfile) && isset($languages[$this->_req->post->lngfile]))
			{
				$_SESSION['language'] = $this->_req->post->lngfile;
			}

			// No selected, or not found, use the site default]]></search>
			<add><![CDATA[			if (isset($this->_req->post->lngfile) && isset($languages[$this->_req->post->lngfile]))
			{
				$_SESSION['language'] = $this->_req->post->lngfile;
				if ($_SESSION['language'] !== $user_info['language'])
				{
					return true;
				}
			}

			// No selected, or not found, use the site default]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				}
			}
		}
	}

	/**]]></search>
			<add><![CDATA[				}
			}
		}
		return false;
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		$context['valid_username'] = !$errors->hasErrors();
	}
}]]></search>
			<add><![CDATA[
		$context['valid_username'] = !$errors->hasErrors();
	}

	public function action_agreement()
	{
		global $context, $user_info, $modSettings, $txt;

		if (isset($this->_req->post->accept_agreement))
		{
			$agreement = new Agreement($user_info['language']);
			$agreement->accept($user_info['id'], $user_info['ip'], empty($modSettings['agreementRevision']) ? strftime('%Y-%m-%d', forum_time(false)) : $modSettings['agreementRevision']);

			$_SESSION['agreement_accepted'] = true;
			if (isset($_SESSION['agreement_url_redirect']))
			{
				redirectexit($_SESSION['agreement_url_redirect']);
			}
			else
			{
				redirectexit();
			}
		}
		elseif (isset($this->_req->post->no_accept))
		{
			redirectexit('action=profile;area=deleteaccount');
		}
		else
		{
			$context['sub_template'] = 'registration_agreement';
			$context['register_subaction'] = 'agreement';
		}

		loadLanguage('Login');
		loadLanguage('Profile');
		loadTemplate('Register');
		// If you have to agree to the agreement, it needs to be fetched from the file.
		$agreement = new \Agreement($user_info['language']);
		$context['agreement'] = $agreement->getParsedText();
		$context['page_title'] = $txt['registration_agreement'];

		$context['show_coppa'] = !empty($modSettings['coppaAge']);
		$context['show_contact_button'] = !empty($modSettings['enable_contactform']) && $modSettings['enable_contactform'] === 'registration';
		// Under age restrictions?
		if ($context['show_coppa'])
		{
			$context['skip_coppa'] = false;
			$context['coppa_agree_above'] = sprintf($txt[($context['require_agreement'] ? 'agreement_' : '') . 'agree_coppa_above'], $modSettings['coppaAge']);
			$context['coppa_agree_below'] = sprintf($txt[($context['require_agreement'] ? 'agreement_' : '') . 'agree_coppa_below'], $modSettings['coppaAge']);
		}
		createToken('register');
	}

	public function action_privacypol()
	{
		global $context, $user_info, $modSettings, $txt;

		$policy = new \PrivacyPolicy($user_info['language']);

		if (isset($this->_req->post->accept_agreement))
		{
			$policy->accept($user_info['id'], $user_info['ip'], empty($modSettings['privacypolicyRevision']) ? strftime('%Y-%m-%d', forum_time(false)) : $modSettings['privacypolicyRevision']);

			$_SESSION['privacypolicy_accepted'] = true;
			if (isset($_SESSION['privacypolicy_url_redirect']))
			{
				redirectexit($_SESSION['privacypolicy_url_redirect']);
			}
			else
			{
				redirectexit();
			}
		}
		elseif (isset($this->_req->post->no_accept))
		{
			redirectexit('action=profile;area=deleteaccount');
		}
		else
		{
			$context['sub_template'] = 'registration_agreement';
			$context['register_subaction'] = 'privacypol';
		}

		loadLanguage('Login');
		loadLanguage('Profile');
		loadTemplate('Register');

		$txt['agreement_agree'] = $txt['policy_agree'];
		$txt['agreement_no_agree'] = $txt['policy_no_agree'];
		$txt['registration_agreement'] = $txt['registration_privacy_policy'];
		$context['page_title'] = $txt['registration_agreement'];

		// If you have to agree to the privacy policy, it needs to be fetched from the file.
		$context['agreement'] = $policy->getParsedText();

		$context['show_coppa'] = false;
		$context['skip_coppa'] = true;
		$context['show_contact_button'] = !empty($modSettings['enable_contactform']) && $modSettings['enable_contactform'] === 'registration';

		createToken('register');
	}
}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Attachments.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ * @param int $old_id_thumb = 0
 * @return array The updated information
 */
function updateAttachmentThumbnail($filename, $id_attach, $id_msg, $old_id_thumb = 0)
{
	global $modSettings;
]]></search>
			<add><![CDATA[ * @param int $old_id_thumb = 0
 * @return array The updated information
 */
function updateAttachmentThumbnail($filename, $id_attach, $id_msg, $old_id_thumb = 0, $real_filename = '')
{
	global $modSettings;
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}
		$thumb_ext = substr($thumb_mime, strpos($thumb_mime, '/') + 1);

		$thumb_filename = $filename . '_thumb';
		$thumb_hash = getAttachmentFilename($thumb_filename, 0, null, true);

		$db = database();]]></search>
			<add><![CDATA[		}
		$thumb_ext = substr($thumb_mime, strpos($thumb_mime, '/') + 1);

		$thumb_filename = (!empty($real_filename) ? $real_filename : $filename) . '_thumb';
		$thumb_hash = getAttachmentFilename($thumb_filename, 0, null, true);

		$db = database();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				if (empty($attachment['id_thumb']) || $attachment['thumb_width'] > $modSettings['attachmentThumbWidth'] || $attachment['thumb_height'] > $modSettings['attachmentThumbHeight'] || ($attachment['thumb_width'] < $modSettings['attachmentThumbWidth'] && $attachment['thumb_height'] < $modSettings['attachmentThumbHeight']))
				{
					$filename = getAttachmentFilename($attachment['filename'], $attachment['id_attach'], $attachment['id_folder'], false, $attachment['file_hash']);
					$attachment = array_merge($attachment, updateAttachmentThumbnail($filename, $attachment['id_attach'], $id_msg, $attachment['id_thumb']));
				}

				// Only adjust dimensions on successful thumbnail creation.]]></search>
			<add><![CDATA[				if (empty($attachment['id_thumb']) || $attachment['thumb_width'] > $modSettings['attachmentThumbWidth'] || $attachment['thumb_height'] > $modSettings['attachmentThumbHeight'] || ($attachment['thumb_width'] < $modSettings['attachmentThumbWidth'] && $attachment['thumb_height'] < $modSettings['attachmentThumbHeight']))
				{
					$filename = getAttachmentFilename($attachment['filename'], $attachment['id_attach'], $attachment['id_folder'], false, $attachment['file_hash']);
					$attachment = array_merge($attachment, updateAttachmentThumbnail($filename, $attachment['id_attach'], $id_msg, $attachment['id_thumb'], $attachment['filename']));
				}

				// Only adjust dimensions on successful thumbnail creation.]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Cache.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	public function __destruct()
	{
		$cached = $this->get('_cached_keys');
		if ($cached === null)
		{
			$cached = array();
		}]]></search>
			<add><![CDATA[	public function __destruct()
	{
		$cached = $this->get('_cached_keys');
		if (is_array($cached) === false)
		{
			$cached = array();
		}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/EmailFormat.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$this->_body = preg_replace('~\]\s*\[br\]\s*\[br\]\s*\[~s', '][br][', $this->_body);

		// Repair the &nbsp; in its various states and any other chaff
		$this->_body = strtr($this->_body, array(' &nbsp;' => ' ', '&nbsp; ' => ' ', "\xc2\xa0" => ' ', "\xe2\x80\xa8" => "\n", "\xA0" => ' '));

		// Trailing space before an end quote
		$this->_body = preg_replace('~\s*\n\s*\[/quote\]~', '[/quote]', $this->_body);]]></search>
			<add><![CDATA[		$this->_body = preg_replace('~\]\s*\[br\]\s*\[br\]\s*\[~s', '][br][', $this->_body);

		// Repair the &nbsp; in its various states and any other chaff
		$this->_body = strtr($this->_body, array(' &nbsp;' => ' ', '&nbsp; ' => ' ', "\xc2\xa0" => ' ', "\xe2\x80\xa8" => "\n"));

		// Trailing space before an end quote
		$this->_body = preg_replace('~\s*\n\s*\[/quote\]~', '[/quote]', $this->_body);]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Exception/ElkException.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		global $txt;

		list ($msg, $lang) = $this->parseMessage($message);
		$this->logMessage($message, $lang);
		loadLanguage($lang);

		$msg = !isset($txt[$msg]) ? $msg : (empty($this->sprintf) ? $txt[$msg] : vsprintf($txt[$msg], $this->sprintf));
]]></search>
			<add><![CDATA[	{
		global $txt;

		try
		{
			list ($msg, $lang) = $this->parseMessage($message);
			$this->logMessage($message, $lang);
			loadLanguage($lang);
		}
		catch (\Exception $e)
		{
			E::instance()->display_minimal_error($message);
		}

		$msg = !isset($txt[$msg]) ? $msg : (empty($this->sprintf) ? $txt[$msg] : vsprintf($txt[$msg], $this->sprintf));
]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Html2Md.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	private function _clipHead()
	{
		$head = ($this->_parser) ? $this->doc->getElementsByTagName('head')->item(0) : $this->doc->find('head', 0)->outertext;
		if ($head !== null)
		{
			if ($this->_parser)]]></search>
			<add><![CDATA[	 */
	private function _clipHead()
	{
		$head = ($this->_parser) ? $this->doc->getElementsByTagName('head')->item(0) : $this->doc->find('head', 0);
		if ($head !== null)
		{
			if ($this->_parser)]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Ila.integrate.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.2
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	public static function validate_plain()
	{
		global $user_info, $scripturl, $context;

		return function (&$tag, &$data, $disabled) use ($user_info, $scripturl, &$context)
		{
			if (isset($disabled['attach']))
			{]]></search>
			<add><![CDATA[	 */
	public static function validate_plain()
	{
		global $user_info, $scripturl, $context, $modSettings;

		return function (&$tag, &$data, $disabled) use ($user_info, $scripturl, &$context, $modSettings)
		{
			if (isset($disabled['attach']))
			{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			// An image will get the light box treatment
			if (!empty($is_image['is_image']) || $preview !== false)
			{
				$data = '<a id="link_' . $num . '" data-lightboximage="' . $num . '" data-lightboxmessage="0" href="' . $scripturl . '?action=dlattach;attach=' . $num . ';image' . '"><img src="' . $scripturl . '?action=dlattach;attach=' . $num . ';thumb" alt="" class="bbc_img" /></a>';
			}
			else
			{]]></search>
			<add><![CDATA[			// An image will get the light box treatment
			if (!empty($is_image['is_image']) || $preview !== false)
			{
				$type = !empty($modSettings['attachmentThumbnails']) ? ';thumb' : '';
				$data = '<a id="link_' . $num . '" data-lightboximage="' . $num . '" data-lightboxmessage="0" href="' . $scripturl . '?action=dlattach;attach=' . $num . ';image' . '"><img src="' . $scripturl . '?action=dlattach;attach=' . $num . $type . '" alt="" class="bbc_img" /></a>';
			}
			else
			{]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Likes.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	}

	// Update the totals for these members
	foreach ($update_given as $id_member => $total)
		updateMemberData($id_member, array('likes_given' => (int) $total));
]]></search>
			<add><![CDATA[	}

	// Update the totals for these members
	require_once(SUBSDIR . '/Members.subs.php');

	foreach ($update_given as $id_member => $total)
		updateMemberData($id_member, array('likes_given' => (int) $total));
]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Mail.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				$unq_head_array[0] = md5($boardurl . microtime() . rand());
				$unq_head_array[1] = $message_type;
				$unq_head_array[2] = $message_id;
				$unq_head = $unq_head_array[0] . '-' . $unq_head_array[2];
				$encoded_unq_head = base64_encode($line_break . $line_break . '[' . $unq_head . ']' . $line_break);
				$unq_id = ($need_break ? $line_break : '') . 'Message-ID: <' . $unq_head . strstr(empty($modSettings['maillist_mail_from']) ? $webmaster_email : $modSettings['maillist_mail_from'], '@') . '>';
				$message = mail_insert_key($message, $unq_head, $encoded_unq_head, $line_break);]]></search>
			<add><![CDATA[				$unq_head_array[0] = md5($boardurl . microtime() . rand());
				$unq_head_array[1] = $message_type;
				$unq_head_array[2] = $message_id;
				$unq_head = $unq_head_array[0] . '-' . $unq_head_array[1] . $unq_head_array[2];
				$encoded_unq_head = base64_encode($line_break . $line_break . '[' . $unq_head . ']' . $line_break);
				$unq_id = ($need_break ? $line_break : '') . 'Message-ID: <' . $unq_head . strstr(empty($modSettings['maillist_mail_from']) ? $webmaster_email : $modSettings['maillist_mail_from'], '@') . '>';
				$message = mail_insert_key($message, $unq_head, $encoded_unq_head, $line_break);]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Memberlist.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// Find any custom profile fields that are to be shown for the memberlist?
	$request = $db->query('', '
		SELECT col_name, field_name, field_desc, field_type, bbc, enclose, vieworder
		FROM {db_prefix}custom_fields
		WHERE active = {int:active}
			AND show_memberlist = {int:show}]]></search>
			<add><![CDATA[
	// Find any custom profile fields that are to be shown for the memberlist?
	$request = $db->query('', '
		SELECT col_name, field_name, field_desc, field_type, bbc, enclose, vieworder, default_value, field_options
		FROM {db_prefix}custom_fields
		WHERE active = {int:active}
			AND show_memberlist = {int:show}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'type' => $row['field_type'],
			'bbc' => !empty($row['bbc']),
			'enclose' => $row['enclose'],
		);

		// Have they selected to sort on a custom column? .., then we build the query]]></search>
			<add><![CDATA[			'type' => $row['field_type'],
			'bbc' => !empty($row['bbc']),
			'enclose' => $row['enclose'],
			'default_value' => $row['default_value'],
			'field_options' => explode(',', $row['field_options']),
		);

		// Have they selected to sort on a custom column? .., then we build the query]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$context['members'] = array();
	foreach ($members as $member)
	{
		if (!loadMemberContext($member))
			continue;

		$context['members'][$member] = $memberContext[$member];]]></search>
			<add><![CDATA[	$context['members'] = array();
	foreach ($members as $member)
	{
		if (!loadMemberContext($member, true))
			continue;

		$context['members'][$member] = $memberContext[$member];]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				$curField = substr($key, 5);

				// Does this member even have it filled out?
				if (!isset($context['members'][$member]['options'][$curField]))
				{
					$context['members'][$member]['options'][$curField] = '';
					continue;
				}

				// Should it be enclosed for display?
				if (!empty($column['enclose']) && !empty($context['members'][$member]['options'][$curField]))
					$context['members'][$member]['options'][$curField] = strtr($column['enclose'], array(
						'{SCRIPTURL}' => $scripturl,
						'{IMAGES_URL}' => $settings['images_url'],
						'{DEFAULT_IMAGES_URL}' => $settings['default_images_url'],
						'{INPUT}' => $context['members'][$member]['options'][$curField],
					));

				// Anything else to make it look "nice"
				if ($column['bbc'])]]></search>
			<add><![CDATA[				$curField = substr($key, 5);

				// Does this member even have it filled out?
				if (!isset($context['members'][$member]['options'][$curField]) && $context['custom_profile_fields']['columns'][$key]['default_value'] === '')
				{
					$context['members'][$member]['options'][$curField] = '';
					continue;
				}
				// Otherwise use the default value
				if (!isset($context['members'][$member]['options'][$curField]))
				{
					$context['members'][$member]['options'][$curField] = $context['custom_profile_fields']['columns'][$key]['default_value'];
					$context['members'][$member]['options'][$curField . '_key'] = $curField . '_0';
				}

				// Should it be enclosed for display?
				if (!empty($column['enclose']) && !empty($context['members'][$member]['options'][$curField]))
				{
					$replacements = array(
						'{SCRIPTURL}' => $scripturl,
						'{IMAGES_URL}' => $settings['images_url'],
						'{DEFAULT_IMAGES_URL}' => $settings['default_images_url'],
						'{INPUT}' => $context['members'][$member]['options'][$curField],
					);
					if (in_array($column['type'], array('radio', 'select')))
					{
						$replacements['{KEY}'] = $context['members'][$member]['options'][$curField . '_key'];
					}
					$context['members'][$member]['options'][$curField] = strtr($column['enclose'], $replacements);
				}

				// Anything else to make it look "nice"
				if ($column['bbc'])]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Members.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	return $ips;
}]]></search>
			<add><![CDATA[
	return $ips;
}

function registerAgreementAccepted($id_member, $ip, $agreement_version)
{
	$db = database();

	$db->insert('',
		'{db_prefix}log_agreement_accept',
		array(
			'version' => 'date',
			'id_member' => 'int',
			'accepted_date' => 'date',
			'accepted_ip' => 'string-255',
		),
		array(
			array(
				'version' => $agreement_version,
				'id_member' => $id_member,
				'accepted_date' => strftime('%Y-%m-%d', forum_time(false)),
				'accepted_ip' => $ip,
			)
		),
		array('version', 'id_member')
	);
}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Mentioning.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 * @param ElkArte\sources\subs\MentionType\Mention_Type_Interface $mention_obj The object that knows how to store
	 *  the mention in the database
	 * @param mixed[] $data must contain uid, type and msg at a minimum
	 */
	public function create($mention_obj, $data)
	{]]></search>
			<add><![CDATA[	 * @param ElkArte\sources\subs\MentionType\Mention_Type_Interface $mention_obj The object that knows how to store
	 *  the mention in the database
	 * @param mixed[] $data must contain uid, type and msg at a minimum
	 *
	 * @return int[]
	 */
	public function create($mention_obj, $data)
	{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Common checks to determine if we can go on
		if (!$this->_isValid())
			return false;

		// Cleanup, validate and remove the invalid values (0 and $user_info['id'])
		$id_targets = array_diff(array_map('intval', array_unique($this->_validator->uid)), array(0, $user_info['id']));

		if (empty($id_targets))
			return false;

		$mention_obj->setDb($this->_db);
		$mention_obj->insert($user_info['id'], $id_targets, $this->_validator->msg, $this->_validator->log_time, $this->_data['status']);

		// Update the member mention count
		foreach ($id_targets as $id_target)
			$this->_updateMenuCount($this->_data['status'], $id_target);

		return true;
	}

	/**]]></search>
			<add><![CDATA[
		// Common checks to determine if we can go on
		if (!$this->_isValid())
			return array();

		// Cleanup, validate and remove the invalid values (0 and $user_info['id'])
		$id_targets = array_diff(array_map('intval', array_unique($this->_validator->uid)), array(0, $user_info['id']));

		if (empty($id_targets))
			return array();

		$mention_obj->setDb($this->_db);
		$actually_mentioned = $mention_obj->insert($user_info['id'], $id_targets, $this->_validator->msg, $this->_validator->log_time, $this->_data['status']);

		// Update the member mention count
		foreach ($actually_mentioned as $id_target)
			$this->_updateMenuCount($this->_data['status'], $id_target);

		return $actually_mentioned;
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		else
			countUserMentions(false, '', $member_id);
	}]]></search>
			<add><![CDATA[		else
			countUserMentions(false, '', $member_id);
	}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/MessageIcons.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		SELECT m.id_icon, m.title, m.filename, m.icon_order, m.id_board, b.name AS board_name
		FROM {db_prefix}message_icons AS m
			LEFT JOIN {db_prefix}boards AS b ON (b.id_board = m.id_board)
		WHERE ({query_see_board} OR b.id_board IS NULL)',
		array(
		)
	);]]></search>
			<add><![CDATA[		SELECT m.id_icon, m.title, m.filename, m.icon_order, m.id_board, b.name AS board_name
		FROM {db_prefix}message_icons AS m
			LEFT JOIN {db_prefix}boards AS b ON (b.id_board = m.id_board)
		WHERE ({query_see_board} OR b.id_board IS NULL)
		ORDER BY m.icon_order',
		array(
		)
	);]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/MessageTopicIcons.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	protected $_default_icon = 'xx';

	/**
	 * This simple function returns the message topic icon array.
	 *
	 * @param bool|false $icon_check
	 * @param string $theme_dir
	 * @param string $default
	 */
	public function __construct($icon_check = false, $theme_dir = '', $default = 'xx')
	{
		parent::__construct();
]]></search>
			<add><![CDATA[	 */
	protected $_default_icon = 'xx';

	/**
	 * Icons that are default with ElkArte
	 * @var array
	 */
	protected $_stable_icons = 	array();

	/**
	 * Icons to load in addition to the default
	 * @var array
	 */
	protected $_custom_icons = array();

	/**
	 * This simple function returns the message topic icon array.
	 *
	 * @param bool|false $icon_check
	 * @param string $theme_dir
	 * @param array topic icons to load in addition to default
	 * @param string $default
	 */
	public function __construct($icon_check = false, $theme_dir = '', $custom = array(), $default = 'xx')
	{
		parent::__construct();
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$this->_check = $icon_check;
		$this->_theme_dir = $theme_dir;
		$this->_default_icon = $default;

		$this->_loadIcons();
	}]]></search>
			<add><![CDATA[		$this->_check = $icon_check;
		$this->_theme_dir = $theme_dir;
		$this->_default_icon = $default;
		$this->_custom_icons = $custom;

		// Set default icons
		$this->_loadStableIcons();

		// Merge in additional ones
		$custom_icons = array_map(function($element) {
			return $element['first_icon'];
		}, $custom);
		$this->_stable_icons = array_merge($this->_stable_icons, $custom_icons);

		$this->_loadIcons();
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 * Return the icon specified by idx, or the default icon for invalid names
	 *
	 * @param int|string $idx
	 */
	public function __get($idx)
	{
		if (isset($this->data[$idx]))
		{
			return $this->data[$idx];
		}
		else
		{
			return $this->data[$this->_default_icon];
		}
	}

	/**
	 * This simple function returns the message topic icon array.
	 */
	protected function _loadIcons()
	{
		global $settings;

		// Setup the default topic icons...
		$stable_icons = array(
			'xx',
			'thumbup',
			'thumbdown',]]></search>
			<add><![CDATA[	 * Return the icon specified by idx, or the default icon for invalid names
	 *
	 * @param int|string $idx
	 * @return string
	 */
	public function __get($idx)
	{
		// Not a standard topic icon
		if (!isset($this->data[$idx]))
		{
			$this->_setUrl($idx);
		}

		return $this->data[$idx];
	}

	/**
	 * Load the stable icon array
	 */
	protected function _loadStableIcons()
	{
		// Setup the default topic icons...
		$this->_stable_icons = array(
			'xx',
			'thumbup',
			'thumbdown',]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'wireless',
			'clip'
		);

		// Allow addons to add to the message icon array
		call_integration_hook('integrate_messageindex_icons', array(&$stable_icons));

		$this->data = array();
		foreach ($stable_icons as $icon)
		{
			if ($this->_check)
			{
				$this->data[$icon] = $settings[file_exists($this->_theme_dir . '/images/post/' . $icon . '.png')
					? self::IMAGE_URL
					: self::DEFAULT_URL] . '/post/' . $icon . '.png';
			}
			else
			{
				$this->data[$icon] = $settings[self::IMAGE_URL] . '/post/' . $icon . '.png';
			}
		}
	}
}]]></search>
			<add><![CDATA[			'wireless',
			'clip'
		);
	}

	/**
	 * This simple function returns the message topic icon array.
	 */
	protected function _loadIcons()
	{
		// Allow addons to add to the message icon array
		call_integration_hook('integrate_messageindex_icons', array(&$this->_stable_icons));

		$this->data = array();
		foreach ($this->_stable_icons as $icon)
		{
			$this->_setUrl($icon);
		}
	}

	/**
	 * Set the icon URL location
	 *
	 * @param string $icon
	 */
	protected function _setUrl($icon)
	{
		global $settings;

		if ($this->_check)
		{
			$this->data[$icon] = $settings[file_exists($this->_theme_dir . '/images/post/' . $icon . '.png')
				 ? self::IMAGE_URL
				 : self::DEFAULT_URL] . '/post/' . $icon . '.png';
		}
		else
		{
			$this->data[$icon] = $settings[self::IMAGE_URL] . '/post/' . $icon . '.png';
		}
	}
}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Notifications.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 * @var array
	 */
	protected $_notifiers;
	/**
	 * Notifications constructor.
	 *]]></search>
			<add><![CDATA[	 * @var array
	 */
	protected $_notifiers;

	/**
	 * Only the members that should be notified.
	 * For example, in case of editing a message, quoted members
	 * should not be mentioned twice.
	 *
	 * @var array
	 */
	protected $_to_actually_mention = array();
	/**
	 * Notifications constructor.
	 *]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	protected function _send_notification(\ElkArte\sources\subs\MentionType\Mention_Type_Interface $obj, \Notifications_Task $task, $bodies)
	{
		$mentioning = new Mentioning($this->_db, new Data_Validator(), $this->_modSettings->enabled_mentions);
		foreach ($bodies as $body)
		{
			$mentioning->create($obj, array(
				'id_member_from' => $task['id_member_from'],
				'id_member' => $body['id_member_to'],
				'id_msg' => $task['id_target'],]]></search>
			<add><![CDATA[	protected function _send_notification(\ElkArte\sources\subs\MentionType\Mention_Type_Interface $obj, \Notifications_Task $task, $bodies)
	{
		$mentioning = new Mentioning($this->_db, new Data_Validator(), $this->_modSettings->enabled_mentions);
		foreach ($bodies as $key => $body)
		{
			$this->_to_actually_mention[$task['notification_type']] = $mentioning->create($obj, array(
				'id_member_from' => $task['id_member_from'],
				'id_member' => $body['id_member_to'],
				'id_msg' => $task['id_target'],]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$last_id = $obj->getLastId();
		foreach ($bodies as $body)
		{
			sendmail($body['email_address'], $body['subject'], $body['body'], null, $last_id);
		}
	}
]]></search>
			<add><![CDATA[		$last_id = $obj->getLastId();
		foreach ($bodies as $body)
		{
			if (in_array($body['id_member_to'], $this->_to_actually_mention[$task['notification_type']]))
			{
				sendmail($body['email_address'], $body['subject'], $body['body'], null, $last_id);
			}
		}
	}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		foreach ($bodies as $body)
		{
			$this->_insert_delayed(array(
				$task['notification_type'],
				$body['id_member_to'],
				$task['log_time'],
				'd',
				$body['body']
			));
		}
	}
]]></search>
			<add><![CDATA[	{
		foreach ($bodies as $body)
		{
			if (in_array($body['id_member_to'], $this->_to_actually_mention[$task['notification_type']]))
			{
				$this->_insert_delayed(array(
					$task['notification_type'],
					$body['id_member_to'],
					$task['log_time'],
					'd',
					$body['body']
				));
			}
		}
	}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		foreach ($bodies as $body)
		{
			$this->_insert_delayed(array(
				$task['notification_type'],
				$body['id_member_to'],
				$task['log_time'],
				'w',
				$body['body']
			));
		}
	}
]]></search>
			<add><![CDATA[	{
		foreach ($bodies as $body)
		{
			if (in_array($body['id_member_to'], $this->_to_actually_mention[$task['notification_type']]))
			{
				$this->_insert_delayed(array(
					$task['notification_type'],
					$body['id_member_to'],
					$task['log_time'],
					'w',
					$body['body']
				));
			}
		}
	}
]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Package.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'current_package' => $id,
		)
	);
	while ($row = $db->fetch_row($request));
		list ($version) = $row;
	$db->free_result($request);
]]></search>
			<add><![CDATA[			'current_package' => $id,
		)
	);
	while ($row = $db->fetch_row($request))
		list ($version) = $row;
	$db->free_result($request);
]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/PersonalMessage.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'not_deleted' => 0,
		)
	);
	$labels = array();
	while ($row = $db->fetch_assoc($result))
	{
		$this_labels = explode(',', $row['labels']);]]></search>
			<add><![CDATA[			'not_deleted' => 0,
		)
	);
	while ($row = $db->fetch_assoc($result))
	{
		$this_labels = explode(',', $row['labels']);]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Priority.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Profile.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			$value = Util::htmlspecialchars($custom_fields[$row['col_name']]);
			if (in_array($row['field_type'], array('select', 'radio')))
				$value = ($options = explode(',', $row['field_options'])) && isset($options[$value]) ? $options[$value] : '';
		}

		// HTML for the input form.]]></search>
			<add><![CDATA[		{
			$value = Util::htmlspecialchars($custom_fields[$row['col_name']]);
			if (in_array($row['field_type'], array('select', 'radio')))
			{
				$options = explode(',', $row['field_options']);
				$value = isset($options[$value]) ? $options[$value] : '';
			}
		}

		// HTML for the input form.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			$input_html = '<select id="' . $row['col_name'] . '" name="customfield[' . $row['col_name'] . ']"><option value=""' . ($row['default_value'] === 'no_default' ? ' selected="selected"' : '') . '></option>';
			$options = explode(',', $row['field_options']);
			foreach ($options as $k => $v)
			{
				$true = ($value == $v);
				$input_html .= '<option value="' . $k . '"' . ($true ? ' selected="selected"' : '') . '>' . $v . '</option>';
				if ($true)
					$output_html = $v;
			}

			$input_html .= '</select>';]]></search>
			<add><![CDATA[		{
			$input_html = '<select id="' . $row['col_name'] . '" name="customfield[' . $row['col_name'] . ']"><option value=""' . ($row['default_value'] === 'no_default' ? ' selected="selected"' : '') . '></option>';
			$options = explode(',', $row['field_options']);

			foreach ($options as $k => $v)
			{
				$true = ($value == $v);
				$input_html .= '<option value="' . $k . '"' . ($true ? ' selected="selected"' : '') . '>' . $v . '</option>';
				if ($true)
				{
					$key = $k;
					$output_html = $v;
				}
			}

			$input_html .= '</select>';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			$input_html = '<fieldset>';
			$options = explode(',', $row['field_options']);
			foreach ($options as $k => $v)
			{
				$true = ($value == $v);
				$input_html .= '<label for="customfield_' . $row['col_name'] . '_' . $k . '"><input type="radio" name="customfield[' . $row['col_name'] . ']" class="input_radio" id="customfield_' . $row['col_name'] . '_' . $k . '" value="' . $k . '" ' . ($true ? 'checked="checked"' : '') . ' />' . $v . '</label><br />';
				if ($true)
					$output_html = $v;
			}
			$input_html .= '</fieldset>';
		}]]></search>
			<add><![CDATA[		{
			$input_html = '<fieldset>';
			$options = explode(',', $row['field_options']);

			foreach ($options as $k => $v)
			{
				$true = ($value == $v);
				$input_html .= '<label for="customfield_' . $row['col_name'] . '_' . $k . '"><input type="radio" name="customfield[' . $row['col_name'] . ']" class="input_radio" id="customfield_' . $row['col_name'] . '_' . $k . '" value="' . $k . '" ' . ($true ? 'checked="checked"' : '') . ' />' . $v . '</label><br />';
				if ($true)
				{
					$key = $k;
					$output_html = $v;
				}
			}
			$input_html .= '</fieldset>';
		}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Enclosing the user input within some other text?
		if (!empty($row['enclose']) && !empty($output_html))
			$output_html = strtr($row['enclose'], array(
				'{SCRIPTURL}' => $scripturl,
				'{IMAGES_URL}' => $settings['images_url'],
				'{DEFAULT_IMAGES_URL}' => $settings['default_images_url'],
				'{INPUT}' => $output_html,
			));

		$context['custom_fields'][] = array(
			'name' => $row['field_name'],
			'desc' => $row['field_desc'],]]></search>
			<add><![CDATA[
		// Enclosing the user input within some other text?
		if (!empty($row['enclose']) && !empty($output_html))
		{
			$replacements = array(
				'{SCRIPTURL}' => $scripturl,
				'{IMAGES_URL}' => $settings['images_url'],
				'{DEFAULT_IMAGES_URL}' => $settings['default_images_url'],
				'{INPUT}' => $output_html,
			);
			if (in_array($row['field_type'], array('radio', 'select')))
			{
				$replacements['{KEY}'] = $row['col_name'] . '_' . $key;
			}
			$output_html = strtr($row['enclose'], $replacements);
		}

		$context['custom_fields_required'] = $context['custom_fields_required'] || $row['show_reg'];
		$valid_areas = array('register', 'account', 'forumprofile', 'theme');

		if (!in_array($area, $valid_areas) && ($value === '' || $value === 'no_default'))
		{
			continue;
		}
		$context['custom_fields'][] = array(
			'name' => $row['field_name'],
			'desc' => $row['field_desc'],]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'field_length' => $row['field_length'],
			'mask' => $row['mask'],
		);
		$context['custom_fields_required'] = $context['custom_fields_required'] || $row['show_reg'];
	}

	$db->free_result($request);]]></search>
			<add><![CDATA[			'field_length' => $row['field_length'],
			'mask' => $row['mask'],
		);
	}

	$db->free_result($request);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Validate the user data.
		if ($row['field_type'] === 'check')
			$value = isset($_POST['customfield'][$row['col_name']]) ? 1 : 0;
		elseif ($row['field_type'] === 'select' || $row['field_type'] === 'radio')
		{
			$value = $row['default_value'];
			foreach (explode(',', $row['field_options']) as $k => $v)
			{
				if (isset($_POST['customfield'][$row['col_name']]) && $_POST['customfield'][$row['col_name']] == $k)
					$value = $v;
			}
		}
		// Otherwise some form of text!]]></search>
			<add><![CDATA[		// Validate the user data.
		if ($row['field_type'] === 'check')
			$value = isset($_POST['customfield'][$row['col_name']]) ? 1 : 0;
		elseif (in_array($row['field_type'], array('radio', 'select')))
		{
			$value = $row['default_value'];
			$options = explode(',', $row['field_options']);

			foreach ($options as $k => $v)
			{
				if (isset($_POST['customfield'][$row['col_name']]) && $_POST['customfield'][$row['col_name']] == $k)
				{
					$key = $k;
					$value = $v;
				}
			}
		}
		// Otherwise some form of text!]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			);

			$changes[] = array($row['col_name'], $value, $memID);
			$user_profile[$memID]['options'][$row['col_name']] = $value;
		}
	}
	$db->free_result($request);]]></search>
			<add><![CDATA[			);

			$changes[] = array($row['col_name'], $value, $memID);
			if (in_array($row['field_type'], array('radio', 'select')))
			{
				$user_profile[$memID]['options'][$row['col_name']] = $value;
				$user_profile[$memID]['options'][$row['col_name'] . '_key'] = $row['col_name'] . '_' . $key;
			}
			else
			{
				$user_profile[$memID]['options'][$row['col_name']] = $value;
			}
		}
	}
	$db->free_result($request);]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/ScheduledTask/Birthdayemails.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			// We need to do some shuffling to make this work properly.
			loadLanguage('EmailTemplates', $lang);
			$txt['emails']['happy_birthday']['subject'] = $txtBirthdayEmails[$greeting . '_subject'];
			$txt['emails']['happy_birthday']['body'] = $txtBirthdayEmails[$greeting . '_body'];

			foreach ($recps as $recp)
			{]]></search>
			<add><![CDATA[		{
			// We need to do some shuffling to make this work properly.
			loadLanguage('EmailTemplates', $lang);
			$txt['happy_birthday_subject'] = $txtBirthdayEmails[$greeting . '_subject'];
			$txt['happy_birthday_body'] = $txtBirthdayEmails[$greeting . '_body'];

			foreach ($recps as $recp)
			{]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/SettingsFormAdapter/File.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:    2011 Simple Machines (http://www.simplemachines.org)
 * license:    BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:    2011 Simple Machines (http://www.simplemachines.org)
 * license:    BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					@copy(BOARDDIR . '/Settings_bak.php', BOARDDIR . '/Settings.php');
				}
			}
			// And ensure we are going to read the correct file next time
			if (function_exists('opcache_invalidate'))
			{
				opcache_invalidate(BOARDDIR . '/Settings.php');
			}]]></search>
			<add><![CDATA[					@copy(BOARDDIR . '/Settings_bak.php', BOARDDIR . '/Settings.php');
				}
			}

			if (extension_loaded('Zend OPcache') && ini_get('opcache.enable') && stripos(BOARDDIR, ini_get('opcache.restrict_api')) !== 0)
			{
				opcache_invalidate(BOARDDIR . '/Settings.php');
			}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/TopicUtil.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$messages_per_page = empty($modSettings['disableCustomPerPage']) && !empty($options['messages_per_page']) ? $options['messages_per_page'] : $modSettings['defaultMaxMessages'];
		$topicseen = $topicseen ? ';topicseen' : '';

		$icon_sources = new MessageTopicIcons(!empty($modSettings['messageIconChecks_enable']), $settings['theme_dir']);

		$parser = \BBC\ParserWrapper::instance();
]]></search>
			<add><![CDATA[		$messages_per_page = empty($modSettings['disableCustomPerPage']) && !empty($options['messages_per_page']) ? $options['messages_per_page'] : $modSettings['defaultMaxMessages'];
		$topicseen = $topicseen ? ';topicseen' : '';

		$icon_sources = new MessageTopicIcons(!empty($modSettings['messageIconChecks_enable']), $settings['theme_dir'], $topics_info);

		$parser = \BBC\ParserWrapper::instance();
]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Unread.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$this->_recent_log_topics_unread_tempTable();
		else
		{
			$board = !empty($this->_query_parameters['boards'][0]) ? $this->_query_parameters['boards'][0] : 0;

			$this->_unreadreplies_tempTable($board);
		}]]></search>
			<add><![CDATA[			$this->_recent_log_topics_unread_tempTable();
		else
		{
			$board = !empty($this->_query_parameters['boards'][0]) && count($this->_query_parameters['boards']) === 1 ? $this->_query_parameters['boards'][0] : 0;

			$this->_unreadreplies_tempTable($board);
		}]]></add>
		</operation>
	</file>
	<file name="BOARDDIR/subscriptions.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.1
 *
 */

// Start things rolling by getting the forum alive...
$ssi_guest_access = true;
if (!file_exists(dirname(__FILE__) . '/bootstrap.php'))
	die('Unable to initialize');

require_once(dirname(__FILE__) . '/bootstrap.php');
new Bootstrap();

global $txt, $modSettings, $context;
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */

// Start things rolling by getting the forum alive...
if (!file_exists(dirname(__FILE__) . '/bootstrap.php'))
	die('Unable to initialize');

global $ssi_guest_access;

require_once(dirname(__FILE__) . '/bootstrap.php');
$ssi_guest_access = true;
new Bootstrap(true);

global $txt, $modSettings, $context;
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	Errors::instance()->log_error($text);

	exit;]]></search>
			<add><![CDATA[	Errors::instance()->log_error($text);

	exit;]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Admin.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if ($context['can_admin'] && isset($version['more']))
		{
			echo
			' <a href="', $scripturl, $version['more'], ';', $context['session_var'], '=', $context['session_id'], '">', $txt['version_check_more'], '</a>';
		}

		echo ']]></search>
			<add><![CDATA[		if ($context['can_admin'] && isset($version['more']))
		{
			echo
			' <a class="linkbutton" href="', $scripturl, $version['more'], ';', $context['session_var'], '=', $context['session_id'], '">', $txt['version_check_more'], '</a>';
		}

		echo ']]></add>
		</operation>
	</file>
	<file name="THEMEDIR/BoardIndex.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			<li class="board_row">
				<h3 class="ic_section_header">
					', $context['show_who'] ? '<a href="' . $scripturl . '?action=who">' : '', '<i class="icon i-users"></i>', $txt['online_now'], ':
					', comma_format($context['num_guests']), ' ', $context['num_guests'] == 1 ? $txt['guest'] : $txt['guests'], ', ', comma_format($context['num_users_online']), ' ', $context['num_users_online'] == 1 ? $txt['user'] : $txt['users'];

	// Handle hidden users and buddies.
	$bracketList = array();]]></search>
			<add><![CDATA[			<li class="board_row">
				<h3 class="ic_section_header">
					', $context['show_who'] ? '<a href="' . $scripturl . '?action=who">' : '', '<i class="icon i-users"></i>', $txt['online_now'], ':
					', comma_format($context['num_users_online']), ' ', $context['num_users_online'] == 1 ? $txt['user'] : $txt['users'], ', ', comma_format($context['num_guests']), ' ', $context['num_guests'] == 1 ? $txt['guest'] : $txt['guests'];

	// Handle hidden users and buddies.
	$bracketList = array();]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Display.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Show a checkbox for quick moderation?
		if (!empty($options['display_quick_mod']) && $options['display_quick_mod'] == 1 && $message['can_remove'])
			echo '
							<li class="listlevel1 inline_mod_check none" id="in_topic_mod_check_', $message['id'], '"></li>';

		// Show "Last Edit: Time by Person" if this post was edited.
		if ($settings['show_modify'])]]></search>
			<add><![CDATA[		// Show a checkbox for quick moderation?
		if (!empty($options['display_quick_mod']) && $options['display_quick_mod'] == 1 && $message['can_remove'])
			echo '
							<li class="listlevel1 inline_mod_check hide" id="in_topic_mod_check_', $message['id'], '"></li>';

		// Show "Last Edit: Time by Person" if this post was edited.
		if ($settings['show_modify'])]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						', $context['is_locked'] ? '<p class="alert smalltext">' . $txt['quick_reply_warning'] . '</p>' : '',
						$context['oldTopicError'] ? '<p class="alert smalltext">' . sprintf($txt['error_old_topic'], $modSettings['oldTopicDays']) . '</p>' : '', '
						', $context['can_reply_approved'] ? '' : '<em>' . $txt['wait_for_approval'] . '</em>', '
						', !$context['can_reply_approved'] && $context['require_verification'] ? '<br />' : '', '
						<form action="', $scripturl, '?board=', $context['current_board'], ';action=post2" method="post" accept-charset="UTF-8" name="postmodify" id="postmodify" onsubmit="submitonce(this);', (!empty($modSettings['mentions_enabled']) ? 'revalidateMentions(\'postmodify\', \'' . (empty($options['use_editor_quick_reply']) ? 'message' : $context['post_box_name']) . '\');' : ''), '">
							<input type="hidden" name="topic" value="', $context['current_topic'], '" />
							<input type="hidden" name="subject" value="', $context['response_prefix'], $context['subject'], '" />]]></search>
			<add><![CDATA[						', $context['is_locked'] ? '<p class="alert smalltext">' . $txt['quick_reply_warning'] . '</p>' : '',
						$context['oldTopicError'] ? '<p class="alert smalltext">' . sprintf($txt['error_old_topic'], $modSettings['oldTopicDays']) . '</p>' : '', '
						', $context['can_reply_approved'] ? '' : '<em>' . $txt['wait_for_approval'] . '</em>', '
						', !$context['can_reply_approved'] && !empty($context['require_verification']) ? '<br />' : '', '
						<form action="', $scripturl, '?board=', $context['current_board'], ';action=post2" method="post" accept-charset="UTF-8" name="postmodify" id="postmodify" onsubmit="submitonce(this);', (!empty($modSettings['mentions_enabled']) ? 'revalidateMentions(\'postmodify\', \'' . (empty($options['use_editor_quick_reply']) ? 'message' : $context['post_box_name']) . '\');' : ''), '">
							<input type="hidden" name="topic" value="', $context['current_topic'], '" />
							<input type="hidden" name="subject" value="', $context['response_prefix'], $context['subject'], '" />]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/GenericMessages.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if (!empty($context['can_moderate_forum']) && !empty($message['member']['ip']))
		$poster_div .= '
									<li class="listlevel2 poster_ip">
										<a class="linklevel2 help" href="' . $scripturl . '?action=' . (!empty($message['member']['is_guest']) ? 'trackip' : 'profile;area=history;sa=ip;u=' . $message['member']['id'] . ';searchip=' . $message['member']['ip']) . '">' . $message['member']['ip'] . '</a>
										<a class="helpicon i-help" href="' . $scripturl . '?action=quickhelp;help=see_admin_ip" onclick="return reqOverlayDiv(this.href);"></a>
									</li>';
	// Or, should we show it because this is you?
	elseif ($message['can_see_ip'] && !empty($message['member']['ip']))
		$poster_div .= '
									<li class="listlevel2 poster_ip">
										<a class="linklevel2 helpicon i-help" href="' . $scripturl . '?action=quickhelp;help=see_member_ip" onclick="return reqOverlayDiv(this.href);"><s>' . $txt['help'] . '</s></a>' . $message['member']['ip'] . '
									</li>';
	// Okay, are you at least logged in?  Then we can show something about why IPs are logged...
	elseif (!$context['user']['is_guest'])]]></search>
			<add><![CDATA[	if (!empty($context['can_moderate_forum']) && !empty($message['member']['ip']))
		$poster_div .= '
									<li class="listlevel2 poster_ip">
										<a class="linklevel2 help" title="' . $message['member']['ip'] . '" href="' . $scripturl . '?action=' . (!empty($message['member']['is_guest']) ? 'trackip' : 'profile;area=history;sa=ip;u=' . $message['member']['id'] . ';searchip=' . $message['member']['ip']) . '">' . $message['member']['ip'] . '</a>
										<a class="helpicon i-help" href="' . $scripturl . '?action=quickhelp;help=see_admin_ip" onclick="return reqOverlayDiv(this.href);"></a>
									</li>';
	// Or, should we show it because this is you?
	elseif ($message['can_see_ip'] && !empty($message['member']['ip']))
		$poster_div .= '
									<li class="listlevel2 poster_ip">
										<a class="linklevel2 help" title="' . $message['member']['ip'] . '" href="#" onclick="return false;">' . $message['member']['ip'] . '</a>
										<a class="linklevel2 helpicon i-help"  title="' . $message['member']['ip'] . '" href="' . $scripturl . '?action=quickhelp;help=see_member_ip" onclick="return reqOverlayDiv(this.href);"><s>' . $txt['help'] . '</s></a>
									</li>';
	// Okay, are you at least logged in?  Then we can show something about why IPs are logged...
	elseif (!$context['user']['is_guest'])]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/ManageFeatures.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	}

	foreach ($context['field']['options'] as $k => $option)
		echo '
							', $k == 0 ? '' : '<br />', '<input type="radio" name="default_select" value="', $k, '"', $context['field']['default_select'] == $option ? ' checked="checked"' : '', ' /><input type="text" name="select_option[', $k, ']" value="', $option, '" class="input_text" />';

	echo '
							<span id="addopt"></span>]]></search>
			<add><![CDATA[	}

	foreach ($context['field']['options'] as $k => $option)
	{
		echo '
							<p><input type="radio" name="default_select" value="', $k, '"', $context['field']['default_select'] == $option ? ' checked="checked"' : '', ' /><input type="text" name="select_option[', $k, ']" value="', $option, '" class="input_text" /></p>';
	}

	echo '
							<span id="addopt"></span>]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/MessageIndex.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						<span class="board_avatar"><a href="#"></a></span>';

			echo '
						<a class="topicicon i-last_post', '" href="', $topic['last_post']['href'], '" title="', $txt['last_post'], '"></a>
						', $topic['last_post']['html_time'], '<br />
						', $txt['by'], ' ', $topic['last_post']['member']['link'], '
					</p>]]></search>
			<add><![CDATA[						<span class="board_avatar"><a href="#"></a></span>';

			echo '
						<a class="topicicon i-last_post" href="', $topic['last_post']['href'], '" title="', $txt['last_post'], '"></a>
						', $topic['last_post']['html_time'], '<br />
						', $txt['by'], ' ', $topic['last_post']['member']['link'], '
					</p>]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/ProfileInfo.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Draw a bar for every board.
		foreach ($context['popular_boards'] as $board)
		{
			echo '
						<dt>', $board['link'], '</dt>
						<dd>
							<div class="profile_pie" style="background-position: -', ((int) ($board['posts_percent'] / 5) * 20), 'px 0;" title="', sprintf($txt['statPanel_topBoards_memberposts'], $board['posts'], $board['total_posts_member'], $board['posts_percent']), '">
								', sprintf($txt['statPanel_topBoards_memberposts'], $board['posts'], $board['total_posts_member'], $board['posts_percent']), '
							</div>
							<span>', empty($context['hide_num_posts']) ? $board['posts'] : '', '</span>]]></search>
			<add><![CDATA[		// Draw a bar for every board.
		foreach ($context['popular_boards'] as $board)
		{
			$position = intval(((int) $board['posts_percent'] / 5)) * 20;

			echo '
						<dt>', $board['link'], '</dt>
						<dd>
							<div class="profile_pie" style="background-position: -', $position, 'px 0;" title="', sprintf($txt['statPanel_topBoards_memberposts'], $board['posts'], $board['total_posts_member'], $board['posts_percent']), '">
								', sprintf($txt['statPanel_topBoards_memberposts'], $board['posts'], $board['total_posts_member'], $board['posts_percent']), '
							</div>
							<span>', empty($context['hide_num_posts']) ? $board['posts'] : '', '</span>]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Draw a bar for every board.
		foreach ($context['board_activity'] as $activity)
		{
			echo '
						<dt>', $activity['link'], '</dt>
						<dd>
							<div class="profile_pie" style="background-position: -', ((int) ($activity['percent'] / 5) * 20), 'px 0;" title="', sprintf($txt['statPanel_topBoards_posts'], $activity['posts'], $activity['total_posts'], $activity['posts_percent']), '">
								', sprintf($txt['statPanel_topBoards_posts'], $activity['posts'], $activity['total_posts'], $activity['posts_percent']), '
							</div>
							<span>', $activity['percent'], '%</span>]]></search>
			<add><![CDATA[		// Draw a bar for every board.
		foreach ($context['board_activity'] as $activity)
		{
			$position = intval(((int) $activity['percent'] / 5)) * 20;

			echo '
						<dt>', $activity['link'], '</dt>
						<dd>
							<div class="profile_pie" style="background-position: -', $position, 'px 0;" title="', sprintf($txt['statPanel_topBoards_posts'], $activity['posts'], $activity['total_posts'], $activity['posts_percent']), '">
								', sprintf($txt['statPanel_topBoards_posts'], $activity['posts'], $activity['total_posts'], $activity['posts_percent']), '
							</div>
							<span>', $activity['percent'], '%</span>]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Register.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	global $context, $scripturl, $txt;

	echo '
		<form action="', $scripturl, '?action=register" method="post" accept-charset="UTF-8" id="registration">
			<h2 class="category_header">', $txt['registration_agreement'];

	if (!empty($context['languages']))
	{
		if (count($context['languages']) === 1)
			foreach ($context['languages'] as $lang_key => $lang_val)
				echo '
				<input type="hidden" name="lngfile" value="', $lang_key, '" />';
		else
		{
			echo '
				<select onchange="this.form.submit()" class="floatright" name="lngfile">';

			foreach ($context['languages'] as $lang_key => $lang_val)
				echo '
					<option value="', $lang_key, '"', empty($lang_val['selected']) ? '' : ' selected="selected"', '>', $lang_val['name'], '</option>';

			echo '
				</select>';
		}
	}

	echo '
			</h2>
			<div class="well">
				<p>', $context['agreement'], '</p>
			</div>
			<div id="confirm_buttons" class="submitbutton centertext">';

	// Age restriction in effect?]]></search>
			<add><![CDATA[	global $context, $scripturl, $txt;

	echo '
		<form action="', $scripturl, '?action=register" method="post" accept-charset="UTF-8" id="registration">';

	if (!empty($context['languages']))
	{
		if (count($context['languages']) === 1)
		{
			foreach ($context['languages'] as $lang_key => $lang_val)
			{
				echo '
				<input type="hidden" name="lngfile" value="', $lang_key, '" />';
			}
		}
		else
		{
			echo '
				<select onchange="this.form.submit()" class="floatright" name="lngfile">';

			foreach ($context['languages'] as $lang_key => $lang_val)
			{
				echo '
					<option value="', $lang_key, '"', empty($lang_val['selected']) ? '' : ' selected="selected"', '>', $lang_val['name'], '</option>';
			}

			echo '
				</select>';
		}
	}

	if (!empty($context['agreement']))
	{
		echo '
			<h2 class="category_header">', $txt['registration_agreement'], '</h2>
			<div class="well">
				<p>', $context['agreement'], '</p>
			</div>';
	}

	if (!empty($context['privacy_policy']))
	{
		echo '
			<h2 class="category_header">', $txt['registration_privacy_policy'], '
			</h2>
			<div class="well">
				<p>', $context['privacy_policy'], '</p>
			</div>';
	}

	echo '
			<div id="confirm_buttons" class="submitbutton centertext">';

	// Age restriction in effect?]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	else
		echo '
				<input type="submit" name="accept_agreement" value="', $txt['agreement_agree'], '" />';

	if ($context['show_contact_button'])
		echo '
				<br /><br />
				<input type="submit" name="show_contact" value="', $txt['contact'], '" />';

	echo '
			<input type="hidden" name="', $context['session_var'], '" value="', $context['session_id'], '" />
			<input type="hidden" name="', $context['register_token_var'], '" value="', $context['register_token'], '" />]]></search>
			<add><![CDATA[	else
		echo '
				<input type="submit" name="accept_agreement" value="', $txt['agreement_agree'], '" />';
	echo '
				<input type="submit" name="no_accept" value="', $txt['agreement_no_agree'], '" />';

	if ($context['show_contact_button'])
		echo '
				<br /><br />
				<input type="submit" name="show_contact" value="', $txt['contact'], '" />';

	if (!empty($context['register_subaction']))
	{
		echo '
				<input type="hidden" name="sa" value="', $context['register_subaction'], '" />';
	}

	echo '
			<input type="hidden" name="', $context['session_var'], '" value="', $context['session_id'], '" />
			<input type="hidden" name="', $context['register_token_var'], '" value="', $context['register_token'], '" />]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			<fieldset class="content">
				<div id="agreement_box">
					', $context['agreement'], '
				</div>';

		if (!empty($context['languages']))
		{
			echo '
				<select id="agreement_lang" class="input_select">';
			foreach ($context['languages'] as $key => $val)
			{]]></search>
			<add><![CDATA[			<fieldset class="content">
				<div id="agreement_box">
					', $context['agreement'], '
				</div>
				<label for="checkbox_agreement">
					<input type="checkbox" name="checkbox_agreement" id="checkbox_agreement" value="1"', ($context['registration_passed_agreement'] ? ' checked="checked"' : ''), ' tabindex="', $context['tabindex']++, '" />
					', $txt['checkbox_agreement'], '
				</label>
				<div id="privacypol_box">
					', $context['privacy_policy'], '
				</div>
				<label for="checkbox_privacypol">
					<input type="checkbox" name="checkbox_privacypol" id="checkbox_privacypol" value="1"', ($context['registration_passed_privacypol'] ? ' checked="checked"' : ''), ' tabindex="', $context['tabindex']++, '" />
					', $txt['checkbox_privacypol'], '
				</label>';

		if (!empty($context['languages']))
		{
			echo '
				<br />
				<select id="agreement_lang" class="input_select">';
			foreach ($context['languages'] as $key => $val)
			{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				</select>';
		}
		echo '
				<label for="checkbox_agreement">
					<input type="checkbox" name="checkbox_agreement" id="checkbox_agreement" value="1"', ($context['registration_passed_agreement'] ? ' checked="checked"' : ''), ' tabindex="', $context['tabindex']++, '" />
					', $txt['checkbox_agreement'], '
				</label>
			</fieldset>';
	}
]]></search>
			<add><![CDATA[				</select>';
		}
		echo '
			</fieldset>';
	}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// Age restriction in effect?
	if ((!$context['require_agreement'] || $context['checkbox_agreement']) && $context['show_coppa'])
		echo '
				<input type="submit" name="accept_agreement" value="', $context['coppa_agree_above'], '" />
				<br /><br />
				<input type="submit" name="accept_agreement_coppa" value="', $context['coppa_agree_below'], '" />';
	else
		echo '
				<input type="submit" name="regSubmit" value="', $txt['register'], '" tabindex="', $context['tabindex']++, '" />';

	if ($context['show_contact_button'])
		echo '
				<input type="submit" name="show_contact" value="', $txt['contact'], '" />';

	echo '
			</div>]]></search>
			<add><![CDATA[
	// Age restriction in effect?
	if ((!$context['require_agreement'] || $context['checkbox_agreement']) && $context['show_coppa'])
	{
		echo '
				<input type="submit" name="accept_agreement" value="', $context['coppa_agree_above'], '" />
				<br /><br />
				<input type="submit" name="accept_agreement_coppa" value="', $context['coppa_agree_below'], '" />';
	}
	else
	{
		echo '
				<input type="submit" name="regSubmit" value="', $txt['register'], '" tabindex="', $context['tabindex']++, '" />';
	}

	if ($context['show_contact_button'])
	{
		echo '
				<input type="submit" name="show_contact" value="', $txt['contact'], '" />';
	}

	echo '
			</div>]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// Just a big box to edit the text file ;).
	echo '
		<form id="admin_form_wrapper" action="', $scripturl, '?action=admin;area=regcenter" method="post" accept-charset="UTF-8">
			<h2 class="category_header">', $txt['registration_agreement'], '</h2>';

	// Warning for if the file isn't writable.
	if (!empty($context['warning']))]]></search>
			<add><![CDATA[
	// Just a big box to edit the text file ;).
	echo '
		<form id="admin_form_wrapper" action="', $scripturl, '?action=admin;area=regcenter" method="post" accept-charset="UTF-8" onsubmit="return confirmAgreement(', JavaScriptEscape($txt['confirm_request_accept_agreement']), ');">
			<h2 class="category_header">', $context['page_title'], '</h2>';

	// Warning for if the file isn't writable.
	if (!empty($context['warning']))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// Show the actual agreement in an oversized text box.
	echo '
					<p class="agreement">
						<textarea cols="70" rows="10" name="agreement" id="agreement">', $context['agreement'], '</textarea>
					</p>
					<p>
						<label for="requireAgreement"><input type="checkbox" name="requireAgreement" id="requireAgreement"', $context['require_agreement'] ? ' checked="checked"' : '', ' tabindex="', $context['tabindex']++, '" value="1" /> ', $txt['admin_agreement'], '.</label>
						<br />
						<label for="checkboxAgreement"><input type="checkbox" name="checkboxAgreement" id="checkboxAgreement"', $context['checkbox_agreement'] ? ' checked="checked"' : '', ' tabindex="', $context['tabindex']++, '" value="1" /> ', $txt['admin_checkbox_agreement'], '.</label>
					</p>
					<div class="submitbutton" >
						<input type="submit" name="save" value="', $txt['save'], '" tabindex="', $context['tabindex']++, '" />
						<input type="hidden" name="sa" value="agreement" />
						<input type="hidden" name="', $context['session_var'], '" value="', $context['session_id'], '" />
						<input type="hidden" name="', $context['admin-rega_token_var'], '" value="', $context['admin-rega_token'], '" />
					</div>]]></search>
			<add><![CDATA[	// Show the actual agreement in an oversized text box.
	echo '
					<p class="agreement">
						<textarea rows="10" name="agreement" id="agreement">', $context['agreement'], '</textarea>
					</p>
					<p>
						<label for="requireAgreement"><input type="checkbox" name="requireAgreement" id="requireAgreement"', $context['require_agreement'] ? ' checked="checked"' : '', ' tabindex="', $context['tabindex']++, '" value="1" /> ', $txt['admin_agreement'], '.</label>';

	if (!empty($context['agreement_show_options']))
	{
		echo '
						<br />
						<label for="checkboxAgreement"><input type="checkbox" name="checkboxAgreement" id="checkboxAgreement"', $context['checkbox_agreement'] ? ' checked="checked"' : '', ' tabindex="', $context['tabindex']++, '" value="1" /> ', $txt['admin_checkbox_agreement'], '.</label>';
	}

	echo '
						<br />
						<label for="checkboxAcceptAgreement"><input type="checkbox" name="checkboxAcceptAgreement" id="checkboxAcceptAgreement" tabindex="', $context['tabindex']++, '" value="1" /> ', $txt['admin_checkbox_accept_agreement'], '.</label>
					</p>
					<div class="submitbutton" >
						<input type="submit" name="save" value="', $txt['save'], '" tabindex="', $context['tabindex']++, '" />
						<input type="hidden" name="sa" value="', $context['subaction'], '" />
						<input type="hidden" name="', $context['session_var'], '" value="', $context['session_id'], '" />
						<input type="hidden" name="', $context['admin-rega_token_var'], '" value="', $context['admin-rega_token'], '" />
					</div>]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Theme.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:    2011 Simple Machines (http://www.simplemachines.org)
 * license:      BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.2
 *
 */
]]></search>
			<add><![CDATA[ * copyright:    2011 Simple Machines (http://www.simplemachines.org)
 * license:      BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			template_show_error('new_version_updates');
		}

		// Any special notices to remind the admin about?
		if (!empty($context['warning_controls']))
		{]]></search>
			<add><![CDATA[			template_show_error('new_version_updates');
		}

		if (!empty($context['accepted_agreement']))
		{
			template_show_error('accepted_agreement');
		}

		// Any special notices to remind the admin about?
		if (!empty($context['warning_controls']))
		{]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/_besocial/index_besocial.css">
		<operation>
			<search position="replace"><![CDATA[	border-color: #008000;
}

.statusbar .insertoverlay .button {
	background: #008000;
	color: #FAFAFA;]]></search>
			<add><![CDATA[	border-color: #008000;
}

.insertoverlay .tabs li.active {
	background-color: #E4E4E4;
}

.statusbar .insertoverlay .button {
	background: #008000;
	color: #FAFAFA;]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/_light/index_light.css">
		<operation>
			<search position="replace"><![CDATA[	border-color: #008000;
}

.statusbar .insertoverlay .button {
	background: #008000;
	color: #FAFAFA;]]></search>
			<add><![CDATA[	border-color: #008000;
}

.insertoverlay .tabs li.active {
	background-color: #E4E4E4;
}

.statusbar .insertoverlay .button {
	background: #008000;
	color: #FAFAFA;]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/_light/rtl_light.css">
		<operation>
			<search position="replace"><![CDATA[/* $PROFILE	*/
/* ------------------------------------------------------- */
.profile_pie {
	background: url(../images/_light/stats_pie_rtl.png);
}

/* $PERSONAL	*/]]></search>
			<add><![CDATA[/* $PROFILE	*/
/* ------------------------------------------------------- */
.profile_pie {
	background: url(../../images/_light/stats_pie_rtl.png);
}

/* $PERSONAL	*/]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/admin.css">
		<operation>
			<search position="replace"><![CDATA[Adjusts display of wording and selections to one line.
----------------------------------------------------------------*/
#admin_form_wrapper .theme_options dt {
    float: left;
    clear: both;
    margin: 0 0 10px 0;
    padding: 0;
    width: 55%;
}

#admin_form_wrapper .theme_options dd {
    float: right;
    overflow: auto;
    margin: 0 0 3px 0;
    padding: 0;
    width: 45%;
    min-height: 2em;
}

#admin_form_wrapper .input_check, .input_radio {
    border: none;
    background: none;
    vertical-align: top;
    margin: 0 2px 4px 4px;
}

/* alternate row colors on Modify Themes,Copy a template */]]></search>
			<add><![CDATA[Adjusts display of wording and selections to one line.
----------------------------------------------------------------*/
#admin_form_wrapper .theme_options dt {
	float: left;
	clear: both;
	margin: 0 0 10px 0;
	padding: 0;
	width: 55%;
}

#admin_form_wrapper .theme_options dd {
	float: right;
	overflow: auto;
	margin: 0 0 3px 0;
	padding: 0;
	width: 45%;
	min-height: 2em;
}

#admin_form_wrapper .input_check, .input_radio {
	border: none;
	background: none;
	vertical-align: top;
	margin: 0 2px 4px 4px;
}

/* alternate row colors on Modify Themes,Copy a template */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	background: url(../images/buttons/delete.png) no-repeat scroll left center transparent;
}

.ui-dialog .ui-dialog-titlebar-close .ui-button-text {
	display: none;
}]]></search>
			<add><![CDATA[	background: url(../images/buttons/delete.png) no-repeat scroll left center transparent;
}

.ui-button-icon-only {
	width: 2em;
	box-sizing: border-box;
	text-indent: -9999px;
	white-space: nowrap;
}

.ui-dialog .ui-dialog-titlebar-close .ui-button-text {
	display: none;
}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/icons_svg.css">
		<operation>
			<search position="replace"><![CDATA[}

/* Gender icons are all from Font Awesome */
.i-female::before {
	content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' stroke='black' stroke-width='9em' fill='%23ff80c8' viewBox='0 0 3584 3584'%3E%3Cpath d='M2816 1152q0 442-295 769t-729 375v520h448q28 0 46 18t18 46v128q0 28-18 46t-46 18h-448v448q0 28-18 46t-46 18h-128q-28 0-46-18t-18-46v-448h-448q-28 0-46-18t-18-46v-128q0-28 18-46t46-18h448v-520q-300-32-543-206t-372-448-105-584q22-268 161-498t364-376 491-176q340-38 638 108t472 424 174 612z m-2048 0q0 370 263 633t633 263 633-263 263-633-263-633-633-263-633 263-263 633z'/%3E%3C/svg%3E");
}

.i-male::before {
	content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' stroke='black' stroke-width='9em' fill='%2380c8ff' viewBox='0 0 3584 3584'%3E%3Cpath d='M3200 256q52 0 90 38t38 90v832q0 28-18 46t-46 18h-128q-28 0-46-18t-18-46v-524l-764 766q252 312 252 718 0 234-91 447t-246 368-368 246-447 91-447-91-368-246-246-368-91-447 91-447 246-368 368-246 447-91q406 0 718 252l764-764h-522q-28 0-46-18t-18-46v-128q0-28 18-46t46-18h832z m-1792 2816q370 0 633-263t263-633-263-633-633-263-633 263-263 633 263 633 633 263z'/%3E%3C/svg%3E");
}

/* Was mercury */
.i-nonbinary::before {
	content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' stroke='black' stroke-width='9em' fill='%23ffb780' viewBox='0 0 3584 3584'%3E%3Cpath d='M2172 632q290 144 467 421t177 611q0 442-295 769t-729 375v264h192q28 0 46 18t18 46v128q0 28-18 46t-46 18h-192v192q0 28-18 46t-46 18h-128q-28 0-46-18t-18-46v-192h-192q-28 0-46-18t-18-46v-128q0-28 18-46t46-18h192v-264q-434-48-729-375t-295-769q0-334 177-611t467-421q-330-192-456-546-12-32 7-59t53-27h138q42 0 58 40 88 212 280 342t428 130 428-130 280-342q16-40 74-40h122q34 0 53 27t7 59q-126 354-456 546z m-508 1928q370 0 633-263t263-633-263-633-633-263-633 263-263 633 263 633 633 263z'/%3E%3C/svg%3E");
}]]></search>
			<add><![CDATA[}

/* Gender icons are all from Font Awesome */
.i-cust_gender_2::before,
.i-female::before {
	content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' stroke='black' stroke-width='9em' fill='%23ff80c8' viewBox='0 0 3584 3584'%3E%3Cpath d='M2816 1152q0 442-295 769t-729 375v520h448q28 0 46 18t18 46v128q0 28-18 46t-46 18h-448v448q0 28-18 46t-46 18h-128q-28 0-46-18t-18-46v-448h-448q-28 0-46-18t-18-46v-128q0-28 18-46t46-18h448v-520q-300-32-543-206t-372-448-105-584q22-268 161-498t364-376 491-176q340-38 638 108t472 424 174 612z m-2048 0q0 370 263 633t633 263 633-263 263-633-263-633-633-263-633 263-263 633z'/%3E%3C/svg%3E");
}

.i-cust_gender_1::before,
.i-male::before {
	content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' stroke='black' stroke-width='9em' fill='%2380c8ff' viewBox='0 0 3584 3584'%3E%3Cpath d='M3200 256q52 0 90 38t38 90v832q0 28-18 46t-46 18h-128q-28 0-46-18t-18-46v-524l-764 766q252 312 252 718 0 234-91 447t-246 368-368 246-447 91-447-91-368-246-246-368-91-447 91-447 246-368 368-246 447-91q406 0 718 252l764-764h-522q-28 0-46-18t-18-46v-128q0-28 18-46t46-18h832z m-1792 2816q370 0 633-263t263-633-263-633-633-263-633 263-263 633 263 633 633 263z'/%3E%3C/svg%3E");
}

/* Was mercury */
.i-cust_gender_4::before,
.i-nonbinary::before {
	content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' stroke='black' stroke-width='9em' fill='%23ffb780' viewBox='0 0 3584 3584'%3E%3Cpath d='M2172 632q290 144 467 421t177 611q0 442-295 769t-729 375v264h192q28 0 46 18t18 46v128q0 28-18 46t-46 18h-192v192q0 28-18 46t-46 18h-128q-28 0-46-18t-18-46v-192h-192q-28 0-46-18t-18-46v-128q0-28 18-46t46-18h192v-264q-434-48-729-375t-295-769q0-334 177-611t467-421q-330-192-456-546-12-32 7-59t53-27h138q42 0 58 40 88 212 280 342t428 130 428-130 280-342q16-40 74-40h122q34 0 53 27t7 59q-126 354-456 546z m-508 1928q370 0 633-263t263-633-263-633-633-263-633 263-263 633 263 633 633 263z'/%3E%3C/svg%3E");
}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}

/* Was transgender-alt */
.i-transgendered::before {
	content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' stroke='black' stroke-width='9em' fill='%23523366' viewBox='0 0 3584 3584'%3E%3Cpath d='M2560 64q0-28 18-46t46-18h576q52 0 90 38t38 90v576q0 28-18 46t-46 18h-128q-28 0-46-18t-18-46v-268l-508 510q252 316 252 718 0 442-295 769t-729 375v264h192q28 0 46 18t18 46v128q0 28-18 46t-46 18h-192v192q0 28-18 46t-46 18h-128q-28 0-46-18t-18-46v-192h-192q-28 0-46-18t-18-46v-128q0-28 18-46t46-18h192v-264q-434-48-729-375t-295-769q0-402 252-718l-104-106-202 222q-18 20-44 21t-46-15l-96-88q-20-16-21-43t17-47l210-230-222-224v268q0 28-18 46t-46 18h-128q-28 0-46-18t-18-46v-576q0-52 38-90t90-38h576q28 0 46 18t18 46v128q0 28-18 46t-46 18h-266l212 214 172-188q18-20 44-21t46 15l96 88q20 16 21 43t-17 47l-180 198 114 112q316-252 718-252t718 252l510-508h-268q-28 0-46-18t-18-46v-128z m-896 2496q370 0 633-263t263-633-263-633-633-263-633 263-263 633 263 633 633 263z'/%3E%3C/svg%3E");
}

/* Was neuter */
.i-genderless::before {
	content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' stroke='black' stroke-width='6em' fill='%23b3ff80' viewBox='0 0 3584 3584'%3E%3Cpath d='M2816 1152q0 442-295 769t-729 375v1224q0 28-18 46t-46 18h-128q-28 0-46-18t-18-46v-1224q-434-48-729-375t-295-769q0-234 91-447t246-368 368-246 447-91 447 91 368 246 246 368 91 447z m-1152 896q370 0 633-263t263-633-263-633-633-263-633 263-263 633 263 633 633 263z'/%3E%3C/svg%3E");
}

/* Was genderless */
.i-undisclosed::before {
	content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' stroke='black' stroke-width='4em' stroke-dasharray='9em,9em' fill='transparent' viewBox='0 0 3584 3584'%3E%3Cpath d='M3328 1792q0 418-206 771t-559 559-771 206-771-206-559-559-206-771 206-771 559-559 771-206 771 206 559 559 206 771z'/%3E%3C/svg%3E");
}]]></search>
			<add><![CDATA[}

/* Was transgender-alt */
.i-cust_gender_5::before,
.i-transgendered::before {
	content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' stroke='black' stroke-width='9em' fill='%23523366' viewBox='0 0 3584 3584'%3E%3Cpath d='M2560 64q0-28 18-46t46-18h576q52 0 90 38t38 90v576q0 28-18 46t-46 18h-128q-28 0-46-18t-18-46v-268l-508 510q252 316 252 718 0 442-295 769t-729 375v264h192q28 0 46 18t18 46v128q0 28-18 46t-46 18h-192v192q0 28-18 46t-46 18h-128q-28 0-46-18t-18-46v-192h-192q-28 0-46-18t-18-46v-128q0-28 18-46t46-18h192v-264q-434-48-729-375t-295-769q0-402 252-718l-104-106-202 222q-18 20-44 21t-46-15l-96-88q-20-16-21-43t17-47l210-230-222-224v268q0 28-18 46t-46 18h-128q-28 0-46-18t-18-46v-576q0-52 38-90t90-38h576q28 0 46 18t18 46v128q0 28-18 46t-46 18h-266l212 214 172-188q18-20 44-21t46 15l96 88q20 16 21 43t-17 47l-180 198 114 112q316-252 718-252t718 252l510-508h-268q-28 0-46-18t-18-46v-128z m-896 2496q370 0 633-263t263-633-263-633-633-263-633 263-263 633 263 633 633 263z'/%3E%3C/svg%3E");
}

/* Was neuter */
.i-cust_gender_3::before,
.i-genderless::before {
	content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' stroke='black' stroke-width='6em' fill='%23b3ff80' viewBox='0 0 3584 3584'%3E%3Cpath d='M2816 1152q0 442-295 769t-729 375v1224q0 28-18 46t-46 18h-128q-28 0-46-18t-18-46v-1224q-434-48-729-375t-295-769q0-234 91-447t246-368 368-246 447-91 447 91 368 246 246 368 91 447z m-1152 896q370 0 633-263t263-633-263-633-633-263-633 263-263 633 263 633 633 263z'/%3E%3C/svg%3E");
}

/* Was genderless */
.i-cust_gender_0::before,
.i-undisclosed::before {
	content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' stroke='black' stroke-width='4em' stroke-dasharray='9em,9em' fill='transparent' viewBox='0 0 3584 3584'%3E%3Cpath d='M3328 1792q0 418-206 771t-559 559-771 206-771-206-559-559-206-771 206-771 559-559 771-206 771 206 559 559 206 771z'/%3E%3C/svg%3E");
}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/index.css">
		<operation>
			<search position="replace"><![CDATA[	/* Next limits maximum width on wide screens. */
	/* Sized in em, since some people require larger text. */
	/* For ease of reading, content really should not be too wide. */
	max-width: 90em;
}

/* -------------------------------------------------------]]></search>
			<add><![CDATA[	/* Next limits maximum width on wide screens. */
	/* Sized in em, since some people require larger text. */
	/* For ease of reading, content really should not be too wide. */
	max-width: 150em;
}

/* -------------------------------------------------------]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
.generic_list_wrapper .additional_row {
	margin: 0;
	padding: 10px 0 0;
	border-radius: 0;
}
]]></search>
			<add><![CDATA[
.generic_list_wrapper .additional_row {
	margin: 0;
	padding: 10px 0 1px;
	border-radius: 0;
}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}

.bbc_img.floatleft {
	padding-right: .25em;
}

.bbc_img.floatright {
	padding-left: .25em;
}

.bbc_img.floatcenter {
	padding: 0 .25em;
}

.bbc_table {]]></search>
			<add><![CDATA[}

.bbc_img.floatleft {
	padding: .1em .75em .1em 0;
}

.bbc_img.floatright {
	padding: .1em 0 .1em .75em;
}

.bbc_img.floatcenter {
	padding: .5em .25em;
}

.bbc_table {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	display: inline-block;
	overflow: hidden;
	max-width: 100%;
	vertical-align: bottom;
	text-overflow: ellipsis;
	white-space: nowrap;
	word-wrap: normal;]]></search>
			<add><![CDATA[	display: inline-block;
	overflow: hidden;
	max-width: 100%;
	vertical-align: top;
	text-overflow: ellipsis;
	white-space: nowrap;
	word-wrap: normal;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}

#main_content_section .navigate_section {
	margin: 12px 0 6px 0;
}

.linktree {]]></search>
			<add><![CDATA[}

#main_content_section .navigate_section {
	margin: 1em 0 .5em 0;
}

.linktree {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	font-size: 0.929em;
	line-height: 2em;
	border-bottom: 1px solid;
}

.linktree:first-child a {
	height: 2em;
}

.linktree:last-child {]]></search>
			<add><![CDATA[	font-size: 0.929em;
	line-height: 2em;
	border-bottom: 1px solid;
	min-height: 2.1em;
}

.linktree:last-child {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
/* The quick buttons. */
.quickbuttons {
	margin: 8px 0 6px 0;
	text-align: right;
}
]]></search>
			<add><![CDATA[
/* The quick buttons. */
.quickbuttons {
	margin: 8px 0 6px 0;
	padding-top: .5em;
	text-align: right;
}
nav > .quickbuttons {
	clear: both;
}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[.listlevel2.warning img, .listlevel2.poster_ip img {
	padding: 0 4px;
}

.avatar {
	max-width: 13em;]]></search>
			<add><![CDATA[.listlevel2.warning img, .listlevel2.poster_ip img {
	padding: 0 4px;
}
.listlevel2.poster_ip .help {
	max-width: 50%;
	overflow: hidden;
	word-wrap: normal;
	vertical-align: middle;
	text-overflow: ellipsis;
}

.avatar {
	max-width: 13em;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	z-index: 1000;
}
.insertoverlay .tabs {
	display: block;
	white-space: nowrap;
	display: flex;
	justify-content: space-between;]]></search>
			<add><![CDATA[	z-index: 1000;
}
.insertoverlay .tabs {
	white-space: nowrap;
	display: flex;
	justify-content: space-between;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	cursor: pointer;
	flex-grow: 1;
}
.insertoverlay .tabs li.active {
	background-color: #E4E4E4;
}

.statusbar .insertoverlay label {
	display: block;]]></search>
			<add><![CDATA[	cursor: pointer;
	flex-grow: 1;
}

.statusbar .insertoverlay label {
	display: block;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[.postattach_thumb img {
	max-width: 100%;
	max-height: 100%;
}

.postattach_thumb {
	display: inline-block;
	max-width: 50px;
	max-height: 50px;
	vertical-align: middle;
}
]]></search>
			<add><![CDATA[.postattach_thumb img {
	max-width: 100%;
	max-height: 100%;
	vertical-align: middle;
}

.postattach_thumb {
	display: inline-block;
	width: 50px;
	height: 100%;
	max-height: 100px;
	vertical-align: middle;
}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	border: 1px solid;
}

#agreement_box {
	overflow-y: scroll;
	margin-bottom: 2em;
	padding: 8px;]]></search>
			<add><![CDATA[	border: 1px solid;
}

#agreement_box, #privacypol_box {
	overflow-y: scroll;
	margin-bottom: 2em;
	padding: 8px;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		width: 2em;
		height: 2em;
	}]]></search>
			<add><![CDATA[		width: 2em;
		height: 2em;
	}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/jquery.ui.tabs.css">
		<operation>
			<search position="replace"><![CDATA[	display: block;
	border-width: 1px;
	padding: 1em 1.4em;
	background: none;
}]]></search>
			<add><![CDATA[	display: block;
	border-width: 1px;
	padding: 1em 1.4em;
}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/rtl.css">
		<operation>
			<search position="replace"><![CDATA[}

.bbc_img.floatleft {
	padding-left: .25em;
}

.bbc_img.floatright {
	padding-right: .25em;
}

/*	$AJAX		*/]]></search>
			<add><![CDATA[}

.bbc_img.floatleft {
	padding: .1em 0 .1em .75em;
}

.bbc_img.floatright {
	padding: .1em .75em .1em 0;
}

/*	$AJAX		*/]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/index.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					</div>';
}

/**
 * Another used and abused piece of template that can be found everywhere
 *]]></search>
			<add><![CDATA[					</div>';
}

function template_uc_generic_infobox()
{
	global $context;

	if (empty($context['generic_infobox']))
	{
		return;
	}

	foreach ($context['generic_infobox'] as $key)
	{
		template_show_error($key);
	}
}

/**
 * Another used and abused piece of template that can be found everywhere
 *]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ * Sometimes we only get a message id.
 *
 * @param      $id
 * @param bool $member
 *
 * @return string
 */]]></search>
			<add><![CDATA[ * Sometimes we only get a message id.
 *
 * @param      $id
 * @param bool|mixed[] $member
 *
 * @return string
 */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		if ($member === false || $member['show_email'] != 'no')
		{
			return '<a href="' . $scripturl . '?action=emailuser;sa=email;msg=' . $id . '" class="icon i-envelope-o' . (($member !== false && $member['online']['is_online']) ? '' : '-blank') . '" title="' . $txt['email'] . '"><s>' . $txt['email'] . '</s></a>';
		}
		else
		{]]></search>
			<add><![CDATA[	{
		if ($member === false || $member['show_email'] != 'no')
		{
			if (empty($member['id']))
			{
				return '<a href="' . $scripturl . '?action=emailuser;sa=email;msg=' . $id . '" class="icon i-envelope-o' . (($member !== false && $member['online']['is_online']) ? '' : '-blank') . '" title="' . $txt['email'] . '"><s>' . $txt['email'] . '</s></a>';
			}
			else
			{
				return '<a href="' . $scripturl . '?action=emailuser;sa=email;uid=' . $member['id'] . '" class="icon i-envelope-o' . (($member !== false && $member['online']['is_online']) ? '' : '-blank') . '" title="' . $txt['email'] . '"><s>' . $txt['email'] . '</s></a>';
			}
		}
		else
		{]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Admin.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['admin_credits'] = 'Credits';
$txt['admin_agreement'] = 'Show and require agreement letter when registering';
$txt['admin_checkbox_agreement'] = 'Show a checkbox for the agreement in registration form instead of a full page';
$txt['admin_agreement_default'] = 'Default';
$txt['admin_agreement_select_language'] = 'Language to edit';
$txt['admin_agreement_select_language_change'] = 'Change';

$txt['admin_delete_members'] = 'Delete Selected Members';
$txt['admin_change_primary_membergroup'] = 'Change primary member group';
$txt['admin_change_secondary_membergroup'] = 'Change/add additional member group';]]></search>
			<add><![CDATA[$txt['admin_credits'] = 'Credits';
$txt['admin_agreement'] = 'Show and require agreement letter when registering';
$txt['admin_checkbox_agreement'] = 'Show a checkbox for the agreement in registration form instead of a full page';
$txt['admin_checkbox_accept_agreement'] = 'Force all members to accept this new version of the agreement at the next visit to the forum';
$txt['admin_agreement_default'] = 'Default';
$txt['admin_agreement_select_language'] = 'Language to edit';
$txt['admin_agreement_select_language_change'] = 'Change';

$txt['admin_privacypol'] = 'Show and require accepting the privacy policy when registering';
$txt['admin_checkbox_accept_privacypol'] = 'Force all members to accept this new version of the privacy policy at the next visit to the forum';

$txt['admin_delete_members'] = 'Delete Selected Members';
$txt['admin_change_primary_membergroup'] = 'Change primary member group';
$txt['admin_change_secondary_membergroup'] = 'Change/add additional member group';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$txt['database_name'] = 'Database Name';
$txt['registration_agreement'] = 'Registration Agreement';
$txt['registration_agreement_desc'] = 'This agreement is shown when a user registers an account on this forum and has to be accepted before users can continue registration.';
$txt['database_prefix'] = 'Database Tables Prefix';
$txt['errors_list'] = 'Listing of forum errors';
$txt['errors_found'] = 'The following errors are fouling up your forum';]]></search>
			<add><![CDATA[$txt['database_name'] = 'Database Name';
$txt['registration_agreement'] = 'Registration Agreement';
$txt['registration_agreement_desc'] = 'This agreement is shown when a user registers an account on this forum and has to be accepted before users can continue registration.';
$txt['privacy_policy'] = 'Privacy Policy';
$txt['privacy_policy_desc'] = 'This privacy policy is shown when a user registers an account on this forum and can be made mandatory before users can continue registration.';
$txt['database_prefix'] = 'Database Tables Prefix';
$txt['errors_list'] = 'Listing of forum errors';
$txt['errors_found'] = 'The following errors are fouling up your forum';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$txt['attachment_delete_admin'] = '[attachment deleted by admin]';
$txt['live'] = 'Latest Software Updates';
$txt['remove_all'] = 'Clear Log';
$txt['agreement_not_writable'] = 'Warning - agreement.txt is not writable, any changes you make will NOT be saved.';

$txt['version_check_desc'] = 'This shows you the versions of your installation\'s files versus those of the latest version. If any of these files are out of date, you should download and upgrade to the latest version at our <a href="https://github.com/elkarte/Elkarte/wiki/downloads" target="_blank" class="new_win">ElkArte Site</a>.';
$txt['version_check_more'] = '(more detailed)';]]></search>
			<add><![CDATA[$txt['attachment_delete_admin'] = '[attachment deleted by admin]';
$txt['live'] = 'Latest Software Updates';
$txt['remove_all'] = 'Clear Log';
$txt['agreement_not_writable'] = 'Warning - agreement.txt is not writable. Any changes you make will NOT be saved.';
$txt['agreement_backup_not_writable'] = 'Warning - the backup directory in forum_root/packages/backup cannot be created.';
$txt['privacypol_not_writable'] = 'Warning - privacypolicy.txt is not writable. Any changes you make will NOT be saved.';
$txt['privacypol_backup_not_writable'] = 'Warning - the backup directory in forum_root/packages/backup cannot be created.';

$txt['version_check_desc'] = 'This shows you the versions of your installation\'s files versus those of the latest version. If any of these files are out of date, you should download and upgrade to the latest version at our <a href="https://github.com/elkarte/Elkarte/wiki/downloads" target="_blank" class="new_win">ElkArte Site</a>.';
$txt['version_check_more'] = '(more detailed)';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$txt['BoardIndex_Controller'] = 'Board Index';
$txt['MessageIndex_Controller'] = 'Content of a board';
$txt['message_index_frontpage'] = 'Select the board to show on the front page:';]]></search>
			<add><![CDATA[$txt['BoardIndex_Controller'] = 'Board Index';
$txt['MessageIndex_Controller'] = 'Content of a board';
$txt['message_index_frontpage'] = 'Select the board to show on the front page:';
$txt['Recent_Controller'] = 'Recent posts';
$txt['recent_frontpage'] = 'Number of messages to show:';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Errors.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['theme_dir_wrong'] = 'The default theme\'s directory is wrong, please correct it by clicking this text.';
$txt['registration_disabled'] = 'Sorry, registration is currently disabled.';
$txt['registration_agreement_missing'] = 'The registration agreement file, agreement.txt, is either missing or empty.  Registrations will be disabled until this is fixed';
$txt['registration_no_secret_question'] = 'Sorry, there is no secret question set for this member.';
$txt['poll_range_error'] = 'Sorry, the poll must run for more than 0 days.';
$txt['delFirstPost'] = 'You are not allowed to delete the first post in a topic.<p>If you want to delete this topic, click on the Remove link, or ask a moderator/administrator to do it for you.</p>';]]></search>
			<add><![CDATA[$txt['theme_dir_wrong'] = 'The default theme\'s directory is wrong, please correct it by clicking this text.';
$txt['registration_disabled'] = 'Sorry, registration is currently disabled.';
$txt['registration_agreement_missing'] = 'The registration agreement file, agreement.txt, is either missing or empty.  Registrations will be disabled until this is fixed';
$txt['registration_privacy_policy_missing'] = 'The privacy policy file, privacypolicy.txt, is either missing or empty.  Registrations will be disabled until this is fixed';
$txt['registration_no_secret_question'] = 'Sorry, there is no secret question set for this member.';
$txt['poll_range_error'] = 'Sorry, the poll must run for more than 0 days.';
$txt['delFirstPost'] = 'You are not allowed to delete the first post in a topic.<p>If you want to delete this topic, click on the Remove link, or ask a moderator/administrator to do it for you.</p>';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[// Drag / Drop sort errors
$txt['no_sortable_items'] = 'No sortable items were found';

$txt['error_invalid_notification_id'] = 'An addons is trying to register a notification method with an existing ID. ID lower than 5 are protected and cannot be used by addons, if the ID is higher, than two addons may be sharing the same ID.';]]></search>
			<add><![CDATA[// Drag / Drop sort errors
$txt['no_sortable_items'] = 'No sortable items were found';

$txt['error_invalid_notification_id'] = 'An addon is trying to register a notification method with an existing ID. IDs lower than 5 are protected and cannot be used by addons. If the ID is higher, then two addons may be sharing the same ID.';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Help.english.php">
		<operation>
			<search position="replace"><![CDATA[		You can use the following variables:<br />
		<ul class="normallist">
			<li>{INPUT} - The input specified by the user.</li>
			<li>{SCRIPTURL} - Web address of forum.</li>
			<li>{IMAGES_URL} - URI of the images directory of the user\'s current theme.</li>
			<li>{DEFAULT_IMAGES_URL} - URI of the images directory of the default theme.</li>]]></search>
			<add><![CDATA[		You can use the following variables:<br />
		<ul class="normallist">
			<li>{INPUT} - The input specified by the user.</li>
			<li>{KEY} - The key specified for a certain value of select box or radio buttons in the admin panel. Usually to use in case of localization or use in CSS of Javascript elements (e.g. as class name).</li>
			<li>{SCRIPTURL} - Web address of forum.</li>
			<li>{IMAGES_URL} - URI of the images directory of the user\'s current theme.</li>
			<li>{DEFAULT_IMAGES_URL} - URI of the images directory of the default theme.</li>]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				<li>align=left : The image is aligned to the left and the text will flow around it</li>
				<li>align=right : The image is aligned to the right and the text will flow around it</li>
				<li>align=center : The image is centered and the text will be below it</li>
			<ul>
		</p><br />
		<p>
			You can choose how wide to show the image:]]></search>
			<add><![CDATA[				<li>align=left : The image is aligned to the left and the text will flow around it</li>
				<li>align=right : The image is aligned to the right and the text will flow around it</li>
				<li>align=center : The image is centered and the text will be below it</li>
			</ul>
		</p><br />
		<p>
			You can choose how wide to show the image:]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				<li>width=123 : The image is displayed 123 pixels wide</li>
				<li>If the width specified is larger than the image or larger than the forum allows the largest allowable width will be used</li>
				<li>Can be used to shrink a thumbnail as well [attach width=50]x[/attach] will display a 50px wide thumbnail</li>
			<ul>
		</p><br />
		<p>
			You can choose how tall to show the image:]]></search>
			<add><![CDATA[				<li>width=123 : The image is displayed 123 pixels wide</li>
				<li>If the width specified is larger than the image or larger than the forum allows the largest allowable width will be used</li>
				<li>Can be used to shrink a thumbnail as well [attach width=50]x[/attach] will display a 50px wide thumbnail</li>
			</ul>
		</p><br />
		<p>
			You can choose how tall to show the image:]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Login.english.php">
		<operation>
			<search position="replace"><![CDATA[
// Registration agreement page.
$txt['registration_agreement'] = 'Registration Agreement';
$txt['agreement_agree'] = 'I accept the terms of the agreement.';
$txt['agreement_agree_coppa_above'] = 'I accept the terms of the agreement and I am at least %1$d years old.';
$txt['agreement_agree_coppa_below'] = 'I accept the terms of the agreement and I am younger than %1$d years old.';
$txt['agree_coppa_above'] = 'I am at least %1$d years old.';]]></search>
			<add><![CDATA[
// Registration agreement page.
$txt['registration_agreement'] = 'Registration Agreement';
$txt['registration_privacy_policy'] = 'Privacy Policy';
$txt['agreement_agree'] = 'I accept the terms of the agreement.';
$txt['agreement_no_agree'] = 'I do not accept the terms of the agreement.';
$txt['policy_agree'] = 'I accept the terms of the privacy policy.';
$txt['policy_no_agree'] = 'I do not accept the terms of the privacy policy.';
$txt['agreement_agree_coppa_above'] = 'I accept the terms of the agreement and I am at least %1$d years old.';
$txt['agreement_agree_coppa_below'] = 'I accept the terms of the agreement and I am younger than %1$d years old.';
$txt['agree_coppa_above'] = 'I am at least %1$d years old.';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$txt['login_below'] = 'Please login below.';
$txt['login_below_or_register'] = 'Please login below or <a href="%1$s">register an account</a> with %2$s';
$txt['checkbox_agreement'] = 'I accept the registration agreement';

$txt['login_hash_error'] = 'Password security has recently been upgraded.<br />Please enter your password again.';
]]></search>
			<add><![CDATA[$txt['login_below'] = 'Please login below.';
$txt['login_below_or_register'] = 'Please login below or <a href="%1$s">register an account</a> with %2$s';
$txt['checkbox_agreement'] = 'I accept the registration agreement';
$txt['checkbox_privacypol'] = 'I accept the privacy policy';
$txt['confirm_request_accept_agreement'] = 'Are you sure you want to force all members to accept the agreement?';
$txt['confirm_request_accept_privacy_policy'] = 'Are you sure you want to force all members to accept the privacy policy?';

$txt['login_hash_error'] = 'Password security has recently been upgraded.<br />Please enter your password again.';
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$txt['setting_registration_activate'] = 'Email Activation';
$txt['setting_registration_approval'] = 'Admin Approval';
$txt['setting_notify_new_registration'] = 'Notify administrators when a new member joins';
$txt['setting_send_welcomeEmail'] = 'Send welcome email to new members';
$txt['setting_show_DisplayNameOnRegistration'] = 'Allow users to enter their screen name';
]]></search>
			<add><![CDATA[$txt['setting_registration_activate'] = 'Email Activation';
$txt['setting_registration_approval'] = 'Admin Approval';
$txt['setting_notify_new_registration'] = 'Notify administrators when a new member joins';
$txt['setting_force_accept_agreement'] = 'Force members to accept the registration agreement when changed';
$txt['force_accept_privacy_policy'] = 'Force members to accept the privacy policy when changed';
$txt['setting_send_welcomeEmail'] = 'Send welcome email to new members';
$txt['setting_show_DisplayNameOnRegistration'] = 'Allow users to enter their screen name';
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$txt['contact_your_message'] = 'Your message';
$txt['errors_contact_form'] = 'The following errors occurred while processing your contact request';
$txt['contact_subject'] = 'A guest has sent you a message';
$txt['contact_thankyou'] = 'Thank you for your message, someone will contact you as soon as possible.';]]></search>
			<add><![CDATA[$txt['contact_your_message'] = 'Your message';
$txt['errors_contact_form'] = 'The following errors occurred while processing your contact request';
$txt['contact_subject'] = 'A guest has sent you a message';
$txt['contact_thankyou'] = 'Thank you for your message. Someone will contact you as soon as possible.';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Profile.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['reminder_openid_is'] = 'The OpenID identity associated with your account is:<br />&nbsp;&nbsp;&nbsp;&nbsp;<strong>%1$s</strong><br /><br />Please make a note of this for future reference.';
$txt['reminder_continue'] = 'Continue';

$txt['current_theme'] = 'Current Theme';
$txt['change'] = 'Change Theme';
$txt['theme_forum_default'] = 'Forum or Board Default';]]></search>
			<add><![CDATA[$txt['reminder_openid_is'] = 'The OpenID identity associated with your account is:<br />&nbsp;&nbsp;&nbsp;&nbsp;<strong>%1$s</strong><br /><br />Please make a note of this for future reference.';
$txt['reminder_continue'] = 'Continue';

$txt['accept_agreement_title'] = 'Accept agreement';
$txt['agreement_accepted_title'] = 'Continue';

$txt['current_theme'] = 'Current Theme';
$txt['change'] = 'Change Theme';
$txt['theme_forum_default'] = 'Forum or Board Default';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/index.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['not_removed_extra'] = '%1$s is a backup of %2$s that was not generated by ElkArte. It can be accessed directly and used to gain unauthorised access to your forum. You should delete it immediately.';
$txt['generic_warning'] = 'Warning';
$txt['agreement_missing'] = 'You are requiring new users to accept a registration agreement, however the file (agreement.txt) doesn\'t exist.';

$txt['new_version_updates'] = 'You have just updated!';
$txt['new_version_updates_text'] = '<a href="{admin_url};area=credits#latest_updates">Click here to see what\'s new in this version of ElkArte!</a>!';]]></search>
			<add><![CDATA[$txt['not_removed_extra'] = '%1$s is a backup of %2$s that was not generated by ElkArte. It can be accessed directly and used to gain unauthorised access to your forum. You should delete it immediately.';
$txt['generic_warning'] = 'Warning';
$txt['agreement_missing'] = 'You are requiring new users to accept a registration agreement, however the file (agreement.txt) doesn\'t exist.';
$txt['agreement_accepted'] = 'You have just accepted the agreement.';
$txt['privacypolicy_accepted'] = 'You have just accepted the forum privacy policy.';

$txt['new_version_updates'] = 'You have just updated!';
$txt['new_version_updates_text'] = '<a href="{admin_url};area=credits#latest_updates">Click here to see what\'s new in this version of ElkArte!</a>!';]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/admin.js">
		<operation>
			<search position="replace"><![CDATA[ */
function addOption()
{
	setOuterHTML(document.getElementById("addopt"), '<br /><input type="radio" name="default_select" value="' + startOptID + '" id="' + startOptID + '" /><input type="text" name="select_option[' + startOptID + ']" value="" class="input_text" /><span id="addopt"></span>');
	startOptID++;
}
]]></search>
			<add><![CDATA[ */
function addOption()
{
	setOuterHTML(document.getElementById("addopt"), '<p><input type="radio" name="default_select" value="' + startOptID + '" id="' + startOptID + '" /><input type="text" name="select_option[' + startOptID + ']" value="" class="input_text" /></p><span id="addopt"></span>');
	startOptID++;
}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		});
	});
});]]></search>
			<add><![CDATA[		});
	});
});

function confirmAgreement(text) {
	if ($('#checkboxAcceptAgreement').is(':checked')) {
		return confirm(text);
	}
	return true;
}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/jquery.sceditor.elkarte.js">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1
 */

/** global: elk_session_var, elk_session_id, ila_filename, elk_scripturl  */]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.1.4
 */

/** global: elk_session_var, elk_session_id, ila_filename, elk_scripturl  */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			else
				sAuthor += sDate !== '' ? ' ' + bbc_search_on : '';

			content = '<blockquote author="' + attr_author + '" link="' + attr_link + '" date="' + attr_date + '"><cite>' + sAuthor + ' ' + sDate + '</cite>' + content + '</blockquote>';

			return content;
		}]]></search>
			<add><![CDATA[			else
				sAuthor += sDate !== '' ? ' ' + bbc_search_on : '';

			content = '<blockquote author="' + attr_author + '" link="' + attr_link + '" date="' + attr_date + '"><cite>' + sAuthor + ' ' + sDate + '</cite>' + content + '</blockquote>&nbsp;';

			return content;
		}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/like_posts.js">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1
 */

/**]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.1.4
 */

/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
					// Posts from the topic itself
					for (var j = 0, topiclen =  data[i].msg_data.length; j < topiclen; j++) {
						msgUrl = topicUrl + '.msg' +  data[i].msg_data[j].id_msg;

						htmlContent += '' +
							'   <div class="content forumposts">' +]]></search>
			<add><![CDATA[
					// Posts from the topic itself
					for (var j = 0, topiclen =  data[i].msg_data.length; j < topiclen; j++) {
						msgUrl = topicUrl + '.msg' +  data[i].msg_data[j].id_msg + '#msg' + data[i].msg_data[j].id_msg;

						htmlContent += '' +
							'   <div class="content forumposts">' +]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/register.js">
		<operation>
			<search position="replace"><![CDATA[			.done(function(request) {
				if (request != '')
				{
					$('#agreement_box').html(request);
				}
			})
			.fail(function(request) {]]></search>
			<add><![CDATA[			.done(function(request) {
				if (request != '')
				{
					$('#agreement_box').html(request.agreement);
					$('#privacypol_box').html(request.privacypol);
				}
			})
			.fail(function(request) {]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/script_elk.js">
		<operation>
			<search position="replace"><![CDATA[						{
							ila_text = ila_text + ' type=thumb';
						}
						if ($over.find("input[data-size='cust']").is(':checked'))
						{
							var w = $over.find('.range').val();
							// Doesn't really matter that much, but just to ensure it's not 1]]></search>
			<add><![CDATA[						{
							ila_text = ila_text + ' type=thumb';
						}
						else if ($over.find("input[data-size='cust']").is(':checked'))
						{
							var w = $over.find('.range').val();
							// Doesn't really matter that much, but just to ensure it's not 1]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[								ila_text = ila_text + ' width=' + w;
							}
						}

						$over.find(".container[data-visual='align'] input").each(function (k, v) {
							if ($(this).is(':checked'))]]></search>
			<add><![CDATA[								ila_text = ila_text + ' width=' + w;
							}
						}
						else if ($over.find("input[data-size='full']").is(':checked'))
						{
							ila_text = ila_text + ' type=image';
						}

						$over.find(".container[data-visual='align'] input").each(function (k, v) {
							if ($(this).is(':checked'))]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/topic.js">
		<operation>
			<search position="replace"><![CDATA[					setTimeout(function () {
						ajaxIndicatorOff();
						closeLightbox();
					}, 1500);
				});
		},]]></search>
			<add><![CDATA[					setTimeout(function () {
						ajaxIndicatorOff();
						closeLightbox();
						window.location = link.href;
					}, 1500);
				});
		},]]></add>
		</operation>
	</file>
</modification>
